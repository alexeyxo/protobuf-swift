// Generated by the Protocol Buffers 3.0 compiler.  DO NOT EDIT!
// Source file "struct.proto"
// Syntax "Proto3"

import Foundation

public extension Google.Protobuf{}

public func == (lhs: Google.Protobuf.Struct, rhs: Google.Protobuf.Struct) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasFields == rhs.hasFields) && (!lhs.hasFields || lhs.fields == rhs.fields)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Google.Protobuf.Struct.FieldsEntry, rhs: Google.Protobuf.Struct.FieldsEntry) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasKey == rhs.hasKey) && (!lhs.hasKey || lhs.key == rhs.key)
  fieldCheck = fieldCheck && (lhs.hasValue == rhs.hasValue) && (!lhs.hasValue || lhs.value == rhs.value)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Google.Protobuf.Value, rhs: Google.Protobuf.Value) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasNullValue == rhs.hasNullValue) && (!lhs.hasNullValue || lhs.nullValue == rhs.nullValue)
  fieldCheck = fieldCheck && (lhs.hasNumberValue == rhs.hasNumberValue) && (!lhs.hasNumberValue || lhs.numberValue == rhs.numberValue)
  fieldCheck = fieldCheck && (lhs.hasStringValue == rhs.hasStringValue) && (!lhs.hasStringValue || lhs.stringValue == rhs.stringValue)
  fieldCheck = fieldCheck && (lhs.hasBoolValue == rhs.hasBoolValue) && (!lhs.hasBoolValue || lhs.boolValue == rhs.boolValue)
  fieldCheck = fieldCheck && (lhs.hasStructValue == rhs.hasStructValue) && (!lhs.hasStructValue || lhs.structValue == rhs.structValue)
  fieldCheck = fieldCheck && (lhs.hasListValue == rhs.hasListValue) && (!lhs.hasListValue || lhs.listValue == rhs.listValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Google.Protobuf.ListValue, rhs: Google.Protobuf.ListValue) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.values == rhs.values)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public extension Google.Protobuf {
  public struct StructRoot {
    public static var sharedInstance : StructRoot {
     struct Static {
         static let instance : StructRoot = StructRoot()
     }
     return Static.instance
    }
    public var extensionRegistry:ExtensionRegistry

    init() {
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
      Google.Protobuf.SwiftDescriptorRoot.sharedInstance.registerAllExtensions(extensionRegistry)
    }
    public func registerAllExtensions(_ registry:ExtensionRegistry) {
    }
  }



  //Enum type declaration start 

  // `NullValue` is a singleton enumeration to represent the null
  // value for the `Value` type union.
  public enum NullValue:Int32, CustomDebugStringConvertible, CustomStringConvertible {
    // Null value.
    case nullValueField = 0
    public func toString() -> String {
      switch self {
      case .nullValueField: return "NULL_VALUE"
      }
    }
    public static func fromString(_ str:String) throws -> Google.Protobuf.NullValue {
      switch str {
      case "NULL_VALUE":  return .nullValueField
      default: throw ProtocolBuffersError.invalidProtocolBuffer("Conversion String to Enum has failed.")
      }
    }
    public var debugDescription:String { return getDescription() }
    public var description:String { return getDescription() }
    private func getDescription() -> String { 
        switch self {
            case .nullValueField: return ".NullValueField"
        }
    }
  }

  //Enum type declaration end 

  // `Struct` represents a structured data value, consisting of fields
  // which map to dynamically typed values. In some languages, `Struct`
  // might be supported by a native representation. For example, in
  // scripting languages like JS a struct is represented as an
  // object. The details of that representation are described together
  // with the proto support for the language.
  final public class Struct : GeneratedMessage, GeneratedMessageProtocol {


    //Nested type declaration start

      final public class FieldsEntry : GeneratedMessage, GeneratedMessageProtocol {
        public private(set) var hasKey:Bool = false
        public private(set) var key:String = ""

        public private(set) var hasValue:Bool = false
        public private(set) var value:Google.Protobuf.Value!
        required public init() {
             super.init()
        }
        override public func isInitialized() -> Bool {
         return true
        }
        override public func writeToCodedOutputStream(_ output:CodedOutputStream) throws {
          if hasKey {
            try output.writeString(1, value:key)
          }
          if hasValue {
            try output.writeMessage(2, value:value)
          }
          try unknownFields.writeToCodedOutputStream(output)
        }
        override public func serializedSize() -> Int32 {
          var serialize_size:Int32 = memoizedSerializedSize
          if serialize_size != -1 {
           return serialize_size
          }

          serialize_size = 0
          if hasKey {
            serialize_size += key.computeStringSize(1)
          }
          if hasValue {
              if let varSizevalue = value?.computeMessageSize(2) {
                  serialize_size += varSizevalue
              }
          }
          serialize_size += unknownFields.serializedSize()
          memoizedSerializedSize = serialize_size
          return serialize_size
        }
        public class func parseArrayDelimitedFromInputStream(_ input:InputStream) throws -> Array<Google.Protobuf.Struct.FieldsEntry> {
          var mergedArray = Array<Google.Protobuf.Struct.FieldsEntry>()
          while let value = try parseFromDelimitedFromInputStream(input) {
            mergedArray += [value]
          }
          return mergedArray
        }
        public class func parseFromDelimitedFromInputStream(_ input:InputStream) throws -> Google.Protobuf.Struct.FieldsEntry? {
          return try Google.Protobuf.Struct.FieldsEntry.Builder().mergeDelimitedFromInputStream(input)?.build()
        }
        public class func parseFromData(_ data:Data) throws -> Google.Protobuf.Struct.FieldsEntry {
          return try Google.Protobuf.Struct.FieldsEntry.Builder().mergeFromData(data, extensionRegistry:Google.Protobuf.StructRoot.sharedInstance.extensionRegistry).build()
        }
        public class func parseFromData(_ data:Data, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Struct.FieldsEntry {
          return try Google.Protobuf.Struct.FieldsEntry.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
        }
        public class func parseFromInputStream(_ input:InputStream) throws -> Google.Protobuf.Struct.FieldsEntry {
          return try Google.Protobuf.Struct.FieldsEntry.Builder().mergeFromInputStream(input).build()
        }
        public class func parseFromInputStream(_ input:InputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Struct.FieldsEntry {
          return try Google.Protobuf.Struct.FieldsEntry.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
        }
        public class func parseFromCodedInputStream(_ input:CodedInputStream) throws -> Google.Protobuf.Struct.FieldsEntry {
          return try Google.Protobuf.Struct.FieldsEntry.Builder().mergeFromCodedInputStream(input).build()
        }
        public class func parseFromCodedInputStream(_ input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Struct.FieldsEntry {
          return try Google.Protobuf.Struct.FieldsEntry.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
        }
        public class func getBuilder() -> Google.Protobuf.Struct.FieldsEntry.Builder {
          return Google.Protobuf.Struct.FieldsEntry.classBuilder() as! Google.Protobuf.Struct.FieldsEntry.Builder
        }
        public func getBuilder() -> Google.Protobuf.Struct.FieldsEntry.Builder {
          return classBuilder() as! Google.Protobuf.Struct.FieldsEntry.Builder
        }
        override public class func classBuilder() -> MessageBuilder {
          return Google.Protobuf.Struct.FieldsEntry.Builder()
        }
        override public func classBuilder() -> MessageBuilder {
          return Google.Protobuf.Struct.FieldsEntry.Builder()
        }
        public func toBuilder() throws -> Google.Protobuf.Struct.FieldsEntry.Builder {
          return try Google.Protobuf.Struct.FieldsEntry.builderWithPrototype(self)
        }
        public class func builderWithPrototype(_ prototype:Google.Protobuf.Struct.FieldsEntry) throws -> Google.Protobuf.Struct.FieldsEntry.Builder {
          return try Google.Protobuf.Struct.FieldsEntry.Builder().mergeFrom(prototype)
        }
        override public func encode() throws -> Dictionary<String,AnyObject> {
          guard isInitialized() else {
            throw ProtocolBuffersError.invalidProtocolBuffer("Uninitialized Message")
          }

          var jsonMap:Dictionary<String,AnyObject> = Dictionary<String,AnyObject>()
          if hasKey {
            jsonMap["key"] = key
          }
          if hasValue {
            jsonMap["value"] = try value.encode()
          }
          return jsonMap
        }
        override class public func decode(_ jsonMap:Dictionary<String,AnyObject>) throws -> Google.Protobuf.Struct.FieldsEntry {
          return try Google.Protobuf.Struct.FieldsEntry.Builder.decodeToBuilder(jsonMap).build()
        }
        override class public func fromJSON(_ data:Data) throws -> Google.Protobuf.Struct.FieldsEntry {
          return try Google.Protobuf.Struct.FieldsEntry.Builder.fromJSONToBuilder(data).build()
        }
        override public func getDescription(_ indent:String) throws -> String {
          var output = ""
          if hasKey {
            output += "\(indent) key: \(key) \n"
          }
          if hasValue {
            output += "\(indent) value {\n"
            if let outDescValue = value {
              output += try outDescValue.getDescription("\(indent)  ")
            }
            output += "\(indent) }\n"
          }
          output += unknownFields.getDescription(indent)
          return output
        }
        override public var hashValue:Int {
            get {
                var hashCode:Int = 7
                if hasKey {
                   hashCode = (hashCode &* 31) &+ key.hashValue
                }
                if hasValue {
                    if let hashValuevalue = value?.hashValue {
                        hashCode = (hashCode &* 31) &+ hashValuevalue
                    }
                }
                hashCode = (hashCode &* 31) &+  unknownFields.hashValue
                return hashCode
            }
        }


        //Meta information declaration start

        override public class func className() -> String {
            return "Google.Protobuf.Struct.FieldsEntry"
        }
        override public func className() -> String {
            return "Google.Protobuf.Struct.FieldsEntry"
        }
        override public func classMetaType() -> GeneratedMessage.Type {
            return Google.Protobuf.Struct.FieldsEntry.self
        }
        //Meta information declaration end

        final public class Builder : GeneratedMessageBuilder {
          private var builderResult:Google.Protobuf.Struct.FieldsEntry = Google.Protobuf.Struct.FieldsEntry()
          public func getMessage() -> Google.Protobuf.Struct.FieldsEntry {
              return builderResult
          }

          required override public init () {
             super.init()
          }
          public var hasKey:Bool {
               get {
                    return builderResult.hasKey
               }
          }
          public var key:String {
               get {
                    return builderResult.key
               }
               set (value) {
                   builderResult.hasKey = true
                   builderResult.key = value
               }
          }
          public func setKey(_ value:String) -> Google.Protobuf.Struct.FieldsEntry.Builder {
            self.key = value
            return self
          }
          public func clearKey() -> Google.Protobuf.Struct.FieldsEntry.Builder{
               builderResult.hasKey = false
               builderResult.key = ""
               return self
          }
          public var hasValue:Bool {
               get {
                   return builderResult.hasValue
               }
          }
          public var value:Google.Protobuf.Value! {
               get {
                   if valueBuilder_ != nil {
                      builderResult.value = valueBuilder_.getMessage()
                   }
                   return builderResult.value
               }
               set (value) {
                   builderResult.hasValue = true
                   builderResult.value = value
               }
          }
          private var valueBuilder_:Google.Protobuf.Value.Builder! {
               didSet {
                  builderResult.hasValue = true
               }
          }
          public func getValueBuilder() -> Google.Protobuf.Value.Builder {
            if valueBuilder_ == nil {
               valueBuilder_ = Google.Protobuf.Value.Builder()
               builderResult.value = valueBuilder_.getMessage()
               if value != nil {
                  try! valueBuilder_.mergeFrom(value)
               }
            }
            return valueBuilder_
          }
          public func setValue(_ value:Google.Protobuf.Value!) -> Google.Protobuf.Struct.FieldsEntry.Builder {
            self.value = value
            return self
          }
          public func mergeValue(_ value:Google.Protobuf.Value) throws -> Google.Protobuf.Struct.FieldsEntry.Builder {
            if builderResult.hasValue {
              builderResult.value = try Google.Protobuf.Value.builderWithPrototype(builderResult.value).mergeFrom(value).buildPartial()
            } else {
              builderResult.value = value
            }
            builderResult.hasValue = true
            return self
          }
          public func clearValue() -> Google.Protobuf.Struct.FieldsEntry.Builder {
            valueBuilder_ = nil
            builderResult.hasValue = false
            builderResult.value = nil
            return self
          }
          override public var internalGetResult:GeneratedMessage {
               get {
                  return builderResult
               }
          }
          override public func clear() -> Google.Protobuf.Struct.FieldsEntry.Builder {
            builderResult = Google.Protobuf.Struct.FieldsEntry()
            return self
          }
          override public func clone() throws -> Google.Protobuf.Struct.FieldsEntry.Builder {
            return try Google.Protobuf.Struct.FieldsEntry.builderWithPrototype(builderResult)
          }
          override public func build() throws -> Google.Protobuf.Struct.FieldsEntry {
               try checkInitialized()
               return buildPartial()
          }
          public func buildPartial() -> Google.Protobuf.Struct.FieldsEntry {
            let returnMe:Google.Protobuf.Struct.FieldsEntry = builderResult
            return returnMe
          }
          public func mergeFrom(_ other:Google.Protobuf.Struct.FieldsEntry) throws -> Google.Protobuf.Struct.FieldsEntry.Builder {
            if other == Google.Protobuf.Struct.FieldsEntry() {
             return self
            }
            if other.hasKey {
                 key = other.key
            }
            if (other.hasValue) {
                try mergeValue(other.value)
            }
            try mergeUnknownFields(other.unknownFields)
            return self
          }
          override public func mergeFromCodedInputStream(_ input:CodedInputStream) throws -> Google.Protobuf.Struct.FieldsEntry.Builder {
               return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
          }
          override public func mergeFromCodedInputStream(_ input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Struct.FieldsEntry.Builder {
            let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
            while (true) {
              let protobufTag = try input.readTag()
              switch protobufTag {
              case 0: 
                self.unknownFields = try unknownFieldsBuilder.build()
                return self

              case 10:
                key = try input.readString()

              case 18:
                let subBuilder:Google.Protobuf.Value.Builder = Google.Protobuf.Value.Builder()
                if hasValue {
                  try subBuilder.mergeFrom(value)
                }
                try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
                value = subBuilder.buildPartial()

              default:
                if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
                   unknownFields = try unknownFieldsBuilder.build()
                   return self
                }
              }
            }
          }
          override class public func decodeToBuilder(_ jsonMap:Dictionary<String,AnyObject>) throws -> Google.Protobuf.Struct.FieldsEntry.Builder {
            let resultDecodedBuilder = Google.Protobuf.Struct.FieldsEntry.Builder()
            if let jsonValueKey = jsonMap["key"] as? String {
              resultDecodedBuilder.key = jsonValueKey
            }
            if let jsonValueValue = jsonMap["value"] as? Dictionary<String,AnyObject> {
              resultDecodedBuilder.value = try Google.Protobuf.Value.Builder.decodeToBuilder(jsonValueValue).build()

            }
            return resultDecodedBuilder
          }
          override class public func fromJSONToBuilder(_ data:Data) throws -> Google.Protobuf.Struct.FieldsEntry.Builder {
            let jsonData = try JSONSerialization.jsonObject(with: data, options: JSONSerialization.ReadingOptions(rawValue: 0))
            guard let jsDataCast = jsonData as? Dictionary<String,AnyObject> else {
              throw ProtocolBuffersError.invalidProtocolBuffer("Invalid JSON data")
            }
            return try Google.Protobuf.Struct.FieldsEntry.Builder.decodeToBuilder(jsDataCast)
          }
        }

      }

    //Nested type declaration end

    public private(set) var hasFields:Bool = false
    public private(set) var fields:Dictionary<String,Google.Protobuf.Value> = Dictionary<String,Google.Protobuf.Value>()

    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(_ output:CodedOutputStream) throws {
      if hasFields {
          for (keyFields, valueFields) in fields {
              let valueOfFields = try! Google.Protobuf.Struct.FieldsEntry.Builder().setKey(keyFields).setValue(valueFields).build()
              try output.writeMessage(1, value:valueOfFields)
          }
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasFields {
          for (keyFields, valueFields) in fields {
              let valueOfFields = try! Google.Protobuf.Struct.FieldsEntry.Builder().setKey(keyFields).setValue(valueFields).build()
              serialize_size += valueOfFields.computeMessageSize(1)
          }
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(_ input:InputStream) throws -> Array<Google.Protobuf.Struct> {
      var mergedArray = Array<Google.Protobuf.Struct>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(_ input:InputStream) throws -> Google.Protobuf.Struct? {
      return try Google.Protobuf.Struct.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(_ data:Data) throws -> Google.Protobuf.Struct {
      return try Google.Protobuf.Struct.Builder().mergeFromData(data, extensionRegistry:Google.Protobuf.StructRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(_ data:Data, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Struct {
      return try Google.Protobuf.Struct.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(_ input:InputStream) throws -> Google.Protobuf.Struct {
      return try Google.Protobuf.Struct.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(_ input:InputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Struct {
      return try Google.Protobuf.Struct.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(_ input:CodedInputStream) throws -> Google.Protobuf.Struct {
      return try Google.Protobuf.Struct.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(_ input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Struct {
      return try Google.Protobuf.Struct.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Google.Protobuf.Struct.Builder {
      return Google.Protobuf.Struct.classBuilder() as! Google.Protobuf.Struct.Builder
    }
    public func getBuilder() -> Google.Protobuf.Struct.Builder {
      return classBuilder() as! Google.Protobuf.Struct.Builder
    }
    override public class func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Struct.Builder()
    }
    override public func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Struct.Builder()
    }
    public func toBuilder() throws -> Google.Protobuf.Struct.Builder {
      return try Google.Protobuf.Struct.builderWithPrototype(self)
    }
    public class func builderWithPrototype(_ prototype:Google.Protobuf.Struct) throws -> Google.Protobuf.Struct.Builder {
      return try Google.Protobuf.Struct.Builder().mergeFrom(prototype)
    }
    override public func encode() throws -> Dictionary<String,AnyObject> {
      guard isInitialized() else {
        throw ProtocolBuffersError.invalidProtocolBuffer("Uninitialized Message")
      }

      var jsonMap:Dictionary<String,AnyObject> = Dictionary<String,AnyObject>()
      if hasFields {
          var mapFields = Dictionary<String, Dictionary<String,AnyObject>>()
          for (keyFields, valueFields) in fields {
              mapFields["\(keyFields)"] = try valueFields.encode()
          }
          jsonMap["fields"] = mapFields
      }
      return jsonMap
    }
    override class public func decode(_ jsonMap:Dictionary<String,AnyObject>) throws -> Google.Protobuf.Struct {
      return try Google.Protobuf.Struct.Builder.decodeToBuilder(jsonMap).build()
    }
    override class public func fromJSON(_ data:Data) throws -> Google.Protobuf.Struct {
      return try Google.Protobuf.Struct.Builder.fromJSONToBuilder(data).build()
    }
    override public func getDescription(_ indent:String) throws -> String {
      var output = ""
      if hasFields {
        output += "\(indent) fields: \(fields) \n"
      }
      output += unknownFields.getDescription(indent)
      return output
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasFields {
                for (keyFields, valueFields) in fields {
                    hashCode = (hashCode &* 31) &+ keyFields.hashValue
                    hashCode = (hashCode &* 31) &+ valueFields.hashValue
                }
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Google.Protobuf.Struct"
    }
    override public func className() -> String {
        return "Google.Protobuf.Struct"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Google.Protobuf.Struct.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Google.Protobuf.Struct = Google.Protobuf.Struct()
      public func getMessage() -> Google.Protobuf.Struct {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      public var hasFields:Bool {
           get {
                return builderResult.hasFields
           }
      }
      public var fields:Dictionary<String,Google.Protobuf.Value> {
           get {
                return builderResult.fields
           }
           set (value) {
               builderResult.hasFields = true
               builderResult.fields = value
           }
      }
      public func setFields(_ value:Dictionary<String,Google.Protobuf.Value>) -> Google.Protobuf.Struct.Builder {
        self.fields = value
        return self
      }
      public func clearFields() -> Google.Protobuf.Struct.Builder{
           builderResult.hasFields = false
           builderResult.fields = Dictionary<String,Google.Protobuf.Value>()
           return self
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      override public func clear() -> Google.Protobuf.Struct.Builder {
        builderResult = Google.Protobuf.Struct()
        return self
      }
      override public func clone() throws -> Google.Protobuf.Struct.Builder {
        return try Google.Protobuf.Struct.builderWithPrototype(builderResult)
      }
      override public func build() throws -> Google.Protobuf.Struct {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Google.Protobuf.Struct {
        let returnMe:Google.Protobuf.Struct = builderResult
        return returnMe
      }
      public func mergeFrom(_ other:Google.Protobuf.Struct) throws -> Google.Protobuf.Struct.Builder {
        if other == Google.Protobuf.Struct() {
         return self
        }
        if other.hasFields {
             fields = other.fields
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      override public func mergeFromCodedInputStream(_ input:CodedInputStream) throws -> Google.Protobuf.Struct.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      override public func mergeFromCodedInputStream(_ input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Struct.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 10:
            let subBuilder = Google.Protobuf.Struct.FieldsEntry.Builder()
            try input.readMessage(subBuilder,extensionRegistry:extensionRegistry)
            let buildOfFields = subBuilder.buildPartial()
            fields[buildOfFields.key] = buildOfFields.value

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
      override class public func decodeToBuilder(_ jsonMap:Dictionary<String,AnyObject>) throws -> Google.Protobuf.Struct.Builder {
        let resultDecodedBuilder = Google.Protobuf.Struct.Builder()
        if let jsonValueFields = jsonMap["fields"] as? Dictionary<String, Dictionary<String,AnyObject>> {
            var mapFields = Dictionary<String, Google.Protobuf.Value>()
            for (keyFields, valueFields) in jsonValueFields {
                let keyFromFields = keyFields
                mapFields[keyFromFields] = try Google.Protobuf.Value.Builder.decodeToBuilder(valueFields).build()

            }
            resultDecodedBuilder.fields = mapFields
        }
        return resultDecodedBuilder
      }
      override class public func fromJSONToBuilder(_ data:Data) throws -> Google.Protobuf.Struct.Builder {
        let jsonData = try JSONSerialization.jsonObject(with: data, options: JSONSerialization.ReadingOptions(rawValue: 0))
        guard let jsDataCast = jsonData as? Dictionary<String,AnyObject> else {
          throw ProtocolBuffersError.invalidProtocolBuffer("Invalid JSON data")
        }
        return try Google.Protobuf.Struct.Builder.decodeToBuilder(jsDataCast)
      }
    }

  }

  // `Value` represents a dynamically typed value which can be either
  // null, a number, a string, a boolean, a recursive struct value, or a
  // list of values. A producer of value is expected to set one of that
  // variants, absence of any variant indicates an error.
  final public class Value : GeneratedMessage, GeneratedMessageProtocol {


    //OneOf declaration start

    public enum Kind {
      case oneOfKindNotSet

      public func checkOneOfIsSet() -> Bool {
           switch self {
           case .oneOfKindNotSet:
                return false
           default:
                return true
           }
      }
      case nullValue(Google.Protobuf.NullValue)

      public static func getNullValue(_ value:Kind) -> Google.Protobuf.NullValue? {
           switch value {
           case .nullValue(let enumValue):
                return enumValue
           default:
                return nil
           }
      }
      case numberValue(Double)

      public static func getNumberValue(_ value:Kind) -> Double? {
           switch value {
           case .numberValue(let enumValue):
                return enumValue
           default:
                return nil
           }
      }
      case stringValue(String)

      public static func getStringValue(_ value:Kind) -> String? {
           switch value {
           case .stringValue(let enumValue):
                return enumValue
           default:
                return nil
           }
      }
      case boolValue(Bool)

      public static func getBoolValue(_ value:Kind) -> Bool? {
           switch value {
           case .boolValue(let enumValue):
                return enumValue
           default:
                return nil
           }
      }
      case structValue(Google.Protobuf.Struct)

      public static func getStructValue(_ value:Kind) -> Google.Protobuf.Struct? {
           switch value {
           case .structValue(let enumValue):
                return enumValue
           default:
                return nil
           }
      }
      case listValue(Google.Protobuf.ListValue)

      public static func getListValue(_ value:Kind) -> Google.Protobuf.ListValue? {
           switch value {
           case .listValue(let enumValue):
                return enumValue
           default:
                return nil
           }
      }
    }
    //OneOf declaration end

    private var storageKind:Kind =  Value.Kind.oneOfKindNotSet
    public func getOneOfKind() ->  Value.Kind {
        let copyObjectKind = storageKind
        return copyObjectKind
    }
    public private(set) var hasNullValue:Bool {
          get {
                guard let _ = Value.Kind.getNullValue(storageKind) else {
                    return false
                }
                return true
          }
          set(newValue) {
          }
    }
    public private(set) var nullValue:Google.Protobuf.NullValue!{
         get {
              return Value.Kind.getNullValue(storageKind)
         }
         set (newvalue) {
              storageKind = Value.Kind.nullValue(newvalue)
         }
    }
    // Represents a double value.
    public private(set) var hasNumberValue:Bool {
          get {
                guard let _ = Value.Kind.getNumberValue(storageKind) else {
                    return false
                }
                return true
          }
          set(newValue) {
          }
    }
    public private(set) var numberValue:Double!{
         get {
              return Value.Kind.getNumberValue(storageKind)
         }
         set (newvalue) {
              storageKind = Value.Kind.numberValue(newvalue)
         }
    }
    // Represents a string value.
    public private(set) var hasStringValue:Bool {
          get {
                guard let _ = Value.Kind.getStringValue(storageKind) else {
                    return false
                }
                return true
          }
          set(newValue) {
          }
    }
    public private(set) var stringValue:String!{
         get {
              return Value.Kind.getStringValue(storageKind)
         }
         set (newvalue) {
              storageKind = Value.Kind.stringValue(newvalue)
         }
    }
    // Represents a boolean value.
    public private(set) var hasBoolValue:Bool {
          get {
                guard let _ = Value.Kind.getBoolValue(storageKind) else {
                    return false
                }
                return true
          }
          set(newValue) {
          }
    }
    public private(set) var boolValue:Bool!{
         get {
              return Value.Kind.getBoolValue(storageKind)
         }
         set (newvalue) {
              storageKind = Value.Kind.boolValue(newvalue)
         }
    }
    public private(set) var hasStructValue:Bool {
          get {
                guard let _ = Value.Kind.getStructValue(storageKind) else {
                    return false
                }
                return true
          }
          set(newValue) {
          }
    }
    public private(set) var structValue:Google.Protobuf.Struct!{
         get {
              return Value.Kind.getStructValue(storageKind)
         }
         set (newvalue) {
              storageKind = Value.Kind.structValue(newvalue)
         }
    }
    public private(set) var hasListValue:Bool {
          get {
                guard let _ = Value.Kind.getListValue(storageKind) else {
                    return false
                }
                return true
          }
          set(newValue) {
          }
    }
    public private(set) var listValue:Google.Protobuf.ListValue!{
         get {
              return Value.Kind.getListValue(storageKind)
         }
         set (newvalue) {
              storageKind = Value.Kind.listValue(newvalue)
         }
    }
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(_ output:CodedOutputStream) throws {
      if hasNullValue {
        try output.writeEnum(1, value:nullValue.rawValue)
      }
      if hasNumberValue {
        try output.writeDouble(2, value:numberValue)
      }
      if hasStringValue {
        try output.writeString(3, value:stringValue)
      }
      if hasBoolValue {
        try output.writeBool(4, value:boolValue)
      }
      if hasStructValue {
        try output.writeMessage(5, value:structValue)
      }
      if hasListValue {
        try output.writeMessage(6, value:listValue)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if (hasNullValue) {
        serialize_size += nullValue.rawValue.computeEnumSize(1)
      }
      if hasNumberValue {
        serialize_size += numberValue.computeDoubleSize(2)
      }
      if hasStringValue {
        serialize_size += stringValue.computeStringSize(3)
      }
      if hasBoolValue {
        serialize_size += boolValue.computeBoolSize(4)
      }
      if hasStructValue {
          if let varSizestructValue = structValue?.computeMessageSize(5) {
              serialize_size += varSizestructValue
          }
      }
      if hasListValue {
          if let varSizelistValue = listValue?.computeMessageSize(6) {
              serialize_size += varSizelistValue
          }
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(_ input:InputStream) throws -> Array<Google.Protobuf.Value> {
      var mergedArray = Array<Google.Protobuf.Value>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(_ input:InputStream) throws -> Google.Protobuf.Value? {
      return try Google.Protobuf.Value.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(_ data:Data) throws -> Google.Protobuf.Value {
      return try Google.Protobuf.Value.Builder().mergeFromData(data, extensionRegistry:Google.Protobuf.StructRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(_ data:Data, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Value {
      return try Google.Protobuf.Value.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(_ input:InputStream) throws -> Google.Protobuf.Value {
      return try Google.Protobuf.Value.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(_ input:InputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Value {
      return try Google.Protobuf.Value.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(_ input:CodedInputStream) throws -> Google.Protobuf.Value {
      return try Google.Protobuf.Value.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(_ input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Value {
      return try Google.Protobuf.Value.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Google.Protobuf.Value.Builder {
      return Google.Protobuf.Value.classBuilder() as! Google.Protobuf.Value.Builder
    }
    public func getBuilder() -> Google.Protobuf.Value.Builder {
      return classBuilder() as! Google.Protobuf.Value.Builder
    }
    override public class func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Value.Builder()
    }
    override public func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Value.Builder()
    }
    public func toBuilder() throws -> Google.Protobuf.Value.Builder {
      return try Google.Protobuf.Value.builderWithPrototype(self)
    }
    public class func builderWithPrototype(_ prototype:Google.Protobuf.Value) throws -> Google.Protobuf.Value.Builder {
      return try Google.Protobuf.Value.Builder().mergeFrom(prototype)
    }
    override public func encode() throws -> Dictionary<String,AnyObject> {
      guard isInitialized() else {
        throw ProtocolBuffersError.invalidProtocolBuffer("Uninitialized Message")
      }

      var jsonMap:Dictionary<String,AnyObject> = Dictionary<String,AnyObject>()
      if hasNullValue {
        jsonMap["nullValue"] = nullValue.toString()
      }
      if hasNumberValue {
        jsonMap["numberValue"] = NSNumber(value:numberValue)
      }
      if hasStringValue {
        jsonMap["stringValue"] = stringValue
      }
      if hasBoolValue {
        jsonMap["boolValue"] = boolValue
      }
      if hasStructValue {
        jsonMap["structValue"] = try structValue.encode()
      }
      if hasListValue {
        jsonMap["listValue"] = try listValue.encode()
      }
      return jsonMap
    }
    override class public func decode(_ jsonMap:Dictionary<String,AnyObject>) throws -> Google.Protobuf.Value {
      return try Google.Protobuf.Value.Builder.decodeToBuilder(jsonMap).build()
    }
    override class public func fromJSON(_ data:Data) throws -> Google.Protobuf.Value {
      return try Google.Protobuf.Value.Builder.fromJSONToBuilder(data).build()
    }
    override public func getDescription(_ indent:String) throws -> String {
      var output = ""
      if (hasNullValue) {
        output += "\(indent) nullValue: \(nullValue.description)\n"
      }
      if hasNumberValue {
        output += "\(indent) numberValue: \(numberValue) \n"
      }
      if hasStringValue {
        output += "\(indent) stringValue: \(stringValue) \n"
      }
      if hasBoolValue {
        output += "\(indent) boolValue: \(boolValue) \n"
      }
      if hasStructValue {
        output += "\(indent) structValue {\n"
        if let outDescStructValue = structValue {
          output += try outDescStructValue.getDescription("\(indent)  ")
        }
        output += "\(indent) }\n"
      }
      if hasListValue {
        output += "\(indent) listValue {\n"
        if let outDescListValue = listValue {
          output += try outDescListValue.getDescription("\(indent)  ")
        }
        output += "\(indent) }\n"
      }
      output += unknownFields.getDescription(indent)
      return output
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasNullValue {
               hashCode = (hashCode &* 31) &+ Int(nullValue.rawValue)
            }
            if hasNumberValue {
               hashCode = (hashCode &* 31) &+ numberValue.hashValue
            }
            if hasStringValue {
               hashCode = (hashCode &* 31) &+ stringValue.hashValue
            }
            if hasBoolValue {
               hashCode = (hashCode &* 31) &+ boolValue.hashValue
            }
            if hasStructValue {
                if let hashValuestructValue = structValue?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuestructValue
                }
            }
            if hasListValue {
                if let hashValuelistValue = listValue?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuelistValue
                }
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Google.Protobuf.Value"
    }
    override public func className() -> String {
        return "Google.Protobuf.Value"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Google.Protobuf.Value.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Google.Protobuf.Value = Google.Protobuf.Value()
      public func getMessage() -> Google.Protobuf.Value {
          return builderResult
      }

      required override public init () {
         super.init()
      }
        public var hasNullValue:Bool{
            get {
                return builderResult.hasNullValue
            }
        }
        public var nullValue:Google.Protobuf.NullValue {
            get {
                return builderResult.nullValue
            }
            set (value) {
                builderResult.hasNullValue = true
                builderResult.nullValue = value
            }
        }
        public func setNullValue(_ value:Google.Protobuf.NullValue) -> Google.Protobuf.Value.Builder {
          self.nullValue = value
          return self
        }
        public func clearNullValue() -> Google.Protobuf.Value.Builder {
           builderResult.hasNullValue = false
           builderResult.nullValue = .nullValueField
           return self
        }
      public var hasNumberValue:Bool {
           get {
                return builderResult.hasNumberValue
           }
      }
      public var numberValue:Double {
           get {
                return builderResult.numberValue
           }
           set (value) {
               builderResult.hasNumberValue = true
               builderResult.numberValue = value
           }
      }
      public func setNumberValue(_ value:Double) -> Google.Protobuf.Value.Builder {
        self.numberValue = value
        return self
      }
      public func clearNumberValue() -> Google.Protobuf.Value.Builder{
           builderResult.hasNumberValue = false
           builderResult.numberValue = Double(0)
           return self
      }
      public var hasStringValue:Bool {
           get {
                return builderResult.hasStringValue
           }
      }
      public var stringValue:String {
           get {
                return builderResult.stringValue
           }
           set (value) {
               builderResult.hasStringValue = true
               builderResult.stringValue = value
           }
      }
      public func setStringValue(_ value:String) -> Google.Protobuf.Value.Builder {
        self.stringValue = value
        return self
      }
      public func clearStringValue() -> Google.Protobuf.Value.Builder{
           builderResult.hasStringValue = false
           builderResult.stringValue = ""
           return self
      }
      public var hasBoolValue:Bool {
           get {
                return builderResult.hasBoolValue
           }
      }
      public var boolValue:Bool {
           get {
                return builderResult.boolValue
           }
           set (value) {
               builderResult.hasBoolValue = true
               builderResult.boolValue = value
           }
      }
      public func setBoolValue(_ value:Bool) -> Google.Protobuf.Value.Builder {
        self.boolValue = value
        return self
      }
      public func clearBoolValue() -> Google.Protobuf.Value.Builder{
           builderResult.hasBoolValue = false
           builderResult.boolValue = false
           return self
      }
      public var hasStructValue:Bool {
           get {
               return builderResult.hasStructValue
           }
      }
      public var structValue:Google.Protobuf.Struct! {
           get {
               if structValueBuilder_ != nil {
                  builderResult.structValue = structValueBuilder_.getMessage()
               }
               return builderResult.structValue
           }
           set (value) {
               builderResult.hasStructValue = true
               builderResult.structValue = value
           }
      }
      private var structValueBuilder_:Google.Protobuf.Struct.Builder! {
           didSet {
              builderResult.hasStructValue = true
           }
      }
      public func getStructValueBuilder() -> Google.Protobuf.Struct.Builder {
        if structValueBuilder_ == nil {
           structValueBuilder_ = Google.Protobuf.Struct.Builder()
           builderResult.structValue = structValueBuilder_.getMessage()
           if structValue != nil {
              try! structValueBuilder_.mergeFrom(structValue)
           }
        }
        return structValueBuilder_
      }
      public func setStructValue(_ value:Google.Protobuf.Struct!) -> Google.Protobuf.Value.Builder {
        self.structValue = value
        return self
      }
      public func mergeStructValue(_ value:Google.Protobuf.Struct) throws -> Google.Protobuf.Value.Builder {
        if builderResult.hasStructValue {
          builderResult.structValue = try Google.Protobuf.Struct.builderWithPrototype(builderResult.structValue).mergeFrom(value).buildPartial()
        } else {
          builderResult.structValue = value
        }
        builderResult.hasStructValue = true
        return self
      }
      public func clearStructValue() -> Google.Protobuf.Value.Builder {
        structValueBuilder_ = nil
        builderResult.hasStructValue = false
        builderResult.structValue = nil
        return self
      }
      public var hasListValue:Bool {
           get {
               return builderResult.hasListValue
           }
      }
      public var listValue:Google.Protobuf.ListValue! {
           get {
               if listValueBuilder_ != nil {
                  builderResult.listValue = listValueBuilder_.getMessage()
               }
               return builderResult.listValue
           }
           set (value) {
               builderResult.hasListValue = true
               builderResult.listValue = value
           }
      }
      private var listValueBuilder_:Google.Protobuf.ListValue.Builder! {
           didSet {
              builderResult.hasListValue = true
           }
      }
      public func getListValueBuilder() -> Google.Protobuf.ListValue.Builder {
        if listValueBuilder_ == nil {
           listValueBuilder_ = Google.Protobuf.ListValue.Builder()
           builderResult.listValue = listValueBuilder_.getMessage()
           if listValue != nil {
              try! listValueBuilder_.mergeFrom(listValue)
           }
        }
        return listValueBuilder_
      }
      public func setListValue(_ value:Google.Protobuf.ListValue!) -> Google.Protobuf.Value.Builder {
        self.listValue = value
        return self
      }
      public func mergeListValue(_ value:Google.Protobuf.ListValue) throws -> Google.Protobuf.Value.Builder {
        if builderResult.hasListValue {
          builderResult.listValue = try Google.Protobuf.ListValue.builderWithPrototype(builderResult.listValue).mergeFrom(value).buildPartial()
        } else {
          builderResult.listValue = value
        }
        builderResult.hasListValue = true
        return self
      }
      public func clearListValue() -> Google.Protobuf.Value.Builder {
        listValueBuilder_ = nil
        builderResult.hasListValue = false
        builderResult.listValue = nil
        return self
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      override public func clear() -> Google.Protobuf.Value.Builder {
        builderResult = Google.Protobuf.Value()
        return self
      }
      override public func clone() throws -> Google.Protobuf.Value.Builder {
        return try Google.Protobuf.Value.builderWithPrototype(builderResult)
      }
      override public func build() throws -> Google.Protobuf.Value {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Google.Protobuf.Value {
        let returnMe:Google.Protobuf.Value = builderResult
        return returnMe
      }
      public func mergeFrom(_ other:Google.Protobuf.Value) throws -> Google.Protobuf.Value.Builder {
        if other == Google.Protobuf.Value() {
         return self
        }
        if other.hasNullValue {
             nullValue = other.nullValue
        }
        if other.hasNumberValue {
             numberValue = other.numberValue
        }
        if other.hasStringValue {
             stringValue = other.stringValue
        }
        if other.hasBoolValue {
             boolValue = other.boolValue
        }
        if (other.hasStructValue) {
            try mergeStructValue(other.structValue)
        }
        if (other.hasListValue) {
            try mergeListValue(other.listValue)
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      override public func mergeFromCodedInputStream(_ input:CodedInputStream) throws -> Google.Protobuf.Value.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      override public func mergeFromCodedInputStream(_ input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Value.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 8:
            let valueIntnullValue = try input.readEnum()
            if let enumsnullValue = Google.Protobuf.NullValue(rawValue:valueIntnullValue){
                 nullValue = enumsnullValue
            } else {
                 try unknownFieldsBuilder.mergeVarintField(1, value:Int64(valueIntnullValue))
            }

          case 17:
            numberValue = try input.readDouble()

          case 26:
            stringValue = try input.readString()

          case 32:
            boolValue = try input.readBool()

          case 42:
            let subBuilder:Google.Protobuf.Struct.Builder = Google.Protobuf.Struct.Builder()
            if hasStructValue {
              try subBuilder.mergeFrom(structValue)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            structValue = subBuilder.buildPartial()

          case 50:
            let subBuilder:Google.Protobuf.ListValue.Builder = Google.Protobuf.ListValue.Builder()
            if hasListValue {
              try subBuilder.mergeFrom(listValue)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            listValue = subBuilder.buildPartial()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
      override class public func decodeToBuilder(_ jsonMap:Dictionary<String,AnyObject>) throws -> Google.Protobuf.Value.Builder {
        let resultDecodedBuilder = Google.Protobuf.Value.Builder()
        if let jsonValueNullValue = jsonMap["nullValue"] as? String {
          resultDecodedBuilder.nullValue = try Google.Protobuf.NullValue.fromString(jsonValueNullValue)
        }
        if let jsonValueNumberValue = jsonMap["numberValue"] as? NSNumber {
          resultDecodedBuilder.numberValue = jsonValueNumberValue.doubleValue
        }
        if let jsonValueStringValue = jsonMap["stringValue"] as? String {
          resultDecodedBuilder.stringValue = jsonValueStringValue
        }
        if let jsonValueBoolValue = jsonMap["boolValue"] as? Bool {
          resultDecodedBuilder.boolValue = jsonValueBoolValue
        }
        if let jsonValueStructValue = jsonMap["structValue"] as? Dictionary<String,AnyObject> {
          resultDecodedBuilder.structValue = try Google.Protobuf.Struct.Builder.decodeToBuilder(jsonValueStructValue).build()

        }
        if let jsonValueListValue = jsonMap["listValue"] as? Dictionary<String,AnyObject> {
          resultDecodedBuilder.listValue = try Google.Protobuf.ListValue.Builder.decodeToBuilder(jsonValueListValue).build()

        }
        return resultDecodedBuilder
      }
      override class public func fromJSONToBuilder(_ data:Data) throws -> Google.Protobuf.Value.Builder {
        let jsonData = try JSONSerialization.jsonObject(with: data, options: JSONSerialization.ReadingOptions(rawValue: 0))
        guard let jsDataCast = jsonData as? Dictionary<String,AnyObject> else {
          throw ProtocolBuffersError.invalidProtocolBuffer("Invalid JSON data")
        }
        return try Google.Protobuf.Value.Builder.decodeToBuilder(jsDataCast)
      }
    }

  }

  // `ListValue` is a wrapper around a repeated field of values.
  final public class ListValue : GeneratedMessage, GeneratedMessageProtocol {
    public private(set) var values:Array<Google.Protobuf.Value>  = Array<Google.Protobuf.Value>()
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(_ output:CodedOutputStream) throws {
      for oneElementValues in values {
          try output.writeMessage(1, value:oneElementValues)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      for oneElementValues in values {
          serialize_size += oneElementValues.computeMessageSize(1)
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(_ input:InputStream) throws -> Array<Google.Protobuf.ListValue> {
      var mergedArray = Array<Google.Protobuf.ListValue>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(_ input:InputStream) throws -> Google.Protobuf.ListValue? {
      return try Google.Protobuf.ListValue.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(_ data:Data) throws -> Google.Protobuf.ListValue {
      return try Google.Protobuf.ListValue.Builder().mergeFromData(data, extensionRegistry:Google.Protobuf.StructRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(_ data:Data, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.ListValue {
      return try Google.Protobuf.ListValue.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(_ input:InputStream) throws -> Google.Protobuf.ListValue {
      return try Google.Protobuf.ListValue.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(_ input:InputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.ListValue {
      return try Google.Protobuf.ListValue.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(_ input:CodedInputStream) throws -> Google.Protobuf.ListValue {
      return try Google.Protobuf.ListValue.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(_ input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.ListValue {
      return try Google.Protobuf.ListValue.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Google.Protobuf.ListValue.Builder {
      return Google.Protobuf.ListValue.classBuilder() as! Google.Protobuf.ListValue.Builder
    }
    public func getBuilder() -> Google.Protobuf.ListValue.Builder {
      return classBuilder() as! Google.Protobuf.ListValue.Builder
    }
    override public class func classBuilder() -> MessageBuilder {
      return Google.Protobuf.ListValue.Builder()
    }
    override public func classBuilder() -> MessageBuilder {
      return Google.Protobuf.ListValue.Builder()
    }
    public func toBuilder() throws -> Google.Protobuf.ListValue.Builder {
      return try Google.Protobuf.ListValue.builderWithPrototype(self)
    }
    public class func builderWithPrototype(_ prototype:Google.Protobuf.ListValue) throws -> Google.Protobuf.ListValue.Builder {
      return try Google.Protobuf.ListValue.Builder().mergeFrom(prototype)
    }
    override public func encode() throws -> Dictionary<String,AnyObject> {
      guard isInitialized() else {
        throw ProtocolBuffersError.invalidProtocolBuffer("Uninitialized Message")
      }

      var jsonMap:Dictionary<String,AnyObject> = Dictionary<String,AnyObject>()
      if !values.isEmpty {
        var jsonArrayValues:Array<Dictionary<String,AnyObject>> = []
          for oneValueValues in values {
            let ecodedMessageValues = try oneValueValues.encode()
            jsonArrayValues += [ecodedMessageValues]
          }
        jsonMap["values"] = jsonArrayValues
      }
      return jsonMap
    }
    override class public func decode(_ jsonMap:Dictionary<String,AnyObject>) throws -> Google.Protobuf.ListValue {
      return try Google.Protobuf.ListValue.Builder.decodeToBuilder(jsonMap).build()
    }
    override class public func fromJSON(_ data:Data) throws -> Google.Protobuf.ListValue {
      return try Google.Protobuf.ListValue.Builder.fromJSONToBuilder(data).build()
    }
    override public func getDescription(_ indent:String) throws -> String {
      var output = ""
      var valuesElementIndex:Int = 0
      for oneElementValues in values {
          output += "\(indent) values[\(valuesElementIndex)] {\n"
          output += try oneElementValues.getDescription("\(indent)  ")
          output += "\(indent)}\n"
          valuesElementIndex += 1
      }
      output += unknownFields.getDescription(indent)
      return output
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            for oneElementValues in values {
                hashCode = (hashCode &* 31) &+ oneElementValues.hashValue
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Google.Protobuf.ListValue"
    }
    override public func className() -> String {
        return "Google.Protobuf.ListValue"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Google.Protobuf.ListValue.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Google.Protobuf.ListValue = Google.Protobuf.ListValue()
      public func getMessage() -> Google.Protobuf.ListValue {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      public var values:Array<Google.Protobuf.Value> {
           get {
               return builderResult.values
           }
           set (value) {
               builderResult.values = value
           }
      }
      public func setValues(_ value:Array<Google.Protobuf.Value>) -> Google.Protobuf.ListValue.Builder {
        self.values = value
        return self
      }
      public func clearValues() -> Google.Protobuf.ListValue.Builder {
        builderResult.values.removeAll(keepingCapacity: false)
        return self
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      override public func clear() -> Google.Protobuf.ListValue.Builder {
        builderResult = Google.Protobuf.ListValue()
        return self
      }
      override public func clone() throws -> Google.Protobuf.ListValue.Builder {
        return try Google.Protobuf.ListValue.builderWithPrototype(builderResult)
      }
      override public func build() throws -> Google.Protobuf.ListValue {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Google.Protobuf.ListValue {
        let returnMe:Google.Protobuf.ListValue = builderResult
        return returnMe
      }
      public func mergeFrom(_ other:Google.Protobuf.ListValue) throws -> Google.Protobuf.ListValue.Builder {
        if other == Google.Protobuf.ListValue() {
         return self
        }
        if !other.values.isEmpty  {
           builderResult.values += other.values
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      override public func mergeFromCodedInputStream(_ input:CodedInputStream) throws -> Google.Protobuf.ListValue.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      override public func mergeFromCodedInputStream(_ input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.ListValue.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 10:
            let subBuilder = Google.Protobuf.Value.Builder()
            try input.readMessage(subBuilder,extensionRegistry:extensionRegistry)
            values += [subBuilder.buildPartial()]

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
      override class public func decodeToBuilder(_ jsonMap:Dictionary<String,AnyObject>) throws -> Google.Protobuf.ListValue.Builder {
        let resultDecodedBuilder = Google.Protobuf.ListValue.Builder()
        if let jsonValueValues = jsonMap["values"] as? Array<Dictionary<String,AnyObject>> {
          var jsonArrayValues:Array<Google.Protobuf.Value> = []
          for oneValueValues in jsonValueValues {
            let messageFromStringValues = try Google.Protobuf.Value.Builder.decodeToBuilder(oneValueValues).build()

            jsonArrayValues += [messageFromStringValues]
          }
          resultDecodedBuilder.values = jsonArrayValues
        }
        return resultDecodedBuilder
      }
      override class public func fromJSONToBuilder(_ data:Data) throws -> Google.Protobuf.ListValue.Builder {
        let jsonData = try JSONSerialization.jsonObject(with: data, options: JSONSerialization.ReadingOptions(rawValue: 0))
        guard let jsDataCast = jsonData as? Dictionary<String,AnyObject> else {
          throw ProtocolBuffersError.invalidProtocolBuffer("Invalid JSON data")
        }
        return try Google.Protobuf.ListValue.Builder.decodeToBuilder(jsDataCast)
      }
    }

  }

}

// @@protoc_insertion_point(global_scope)
