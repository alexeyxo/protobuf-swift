// Generated by the protocol buffer compiler.  DO NOT EDIT!
// Source file unittest_custom_options.proto

import Foundation
import ProtocolBuffers


internal extension ProtobufUnittest{}

internal func == (lhs: ProtobufUnittest.TestMessageWithCustomOptions, rhs: ProtobufUnittest.TestMessageWithCustomOptions) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasField1 == rhs.hasField1) && (!lhs.hasField1 || lhs.field1 == rhs.field1)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.CustomOptionFooRequest, rhs: ProtobufUnittest.CustomOptionFooRequest) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.CustomOptionFooResponse, rhs: ProtobufUnittest.CustomOptionFooResponse) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.CustomOptionFooClientMessage, rhs: ProtobufUnittest.CustomOptionFooClientMessage) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.CustomOptionFooServerMessage, rhs: ProtobufUnittest.CustomOptionFooServerMessage) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.DummyMessageContainingEnum, rhs: ProtobufUnittest.DummyMessageContainingEnum) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.DummyMessageInvalidAsOptionType, rhs: ProtobufUnittest.DummyMessageInvalidAsOptionType) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.CustomOptionMinIntegerValues, rhs: ProtobufUnittest.CustomOptionMinIntegerValues) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.CustomOptionMaxIntegerValues, rhs: ProtobufUnittest.CustomOptionMaxIntegerValues) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.CustomOptionOtherValues, rhs: ProtobufUnittest.CustomOptionOtherValues) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.SettingRealsFromPositiveInts, rhs: ProtobufUnittest.SettingRealsFromPositiveInts) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.SettingRealsFromNegativeInts, rhs: ProtobufUnittest.SettingRealsFromNegativeInts) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.ComplexOptionType1, rhs: ProtobufUnittest.ComplexOptionType1) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasFoo == rhs.hasFoo) && (!lhs.hasFoo || lhs.foo == rhs.foo)
  fieldCheck = fieldCheck && (lhs.hasFoo2 == rhs.hasFoo2) && (!lhs.hasFoo2 || lhs.foo2 == rhs.foo2)
  fieldCheck = fieldCheck && (lhs.hasFoo3 == rhs.hasFoo3) && (!lhs.hasFoo3 || lhs.foo3 == rhs.foo3)
  fieldCheck = fieldCheck && (lhs.foo4 == rhs.foo4)
  fieldCheck = fieldCheck && lhs.isEqualExtensionsInOther(rhs, startInclusive:Int32(100), endExclusive:Int32(536870912))
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.ComplexOptionType2, rhs: ProtobufUnittest.ComplexOptionType2) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasBar == rhs.hasBar) && (!lhs.hasBar || lhs.bar == rhs.bar)
  fieldCheck = fieldCheck && (lhs.hasBaz == rhs.hasBaz) && (!lhs.hasBaz || lhs.baz == rhs.baz)
  fieldCheck = fieldCheck && (lhs.hasFred == rhs.hasFred) && (!lhs.hasFred || lhs.fred == rhs.fred)
  fieldCheck = fieldCheck && (lhs.barney == rhs.barney)
  fieldCheck = fieldCheck && lhs.isEqualExtensionsInOther(rhs, startInclusive:Int32(100), endExclusive:Int32(536870912))
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.ComplexOptionType2.ComplexOptionType4, rhs: ProtobufUnittest.ComplexOptionType2.ComplexOptionType4) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasWaldo == rhs.hasWaldo) && (!lhs.hasWaldo || lhs.waldo == rhs.waldo)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.ComplexOptionType3, rhs: ProtobufUnittest.ComplexOptionType3) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasQux == rhs.hasQux) && (!lhs.hasQux || lhs.qux == rhs.qux)
  fieldCheck = fieldCheck && (lhs.hasComplexOptionType5 == rhs.hasComplexOptionType5) && (!lhs.hasComplexOptionType5 || lhs.complexOptionType5 == rhs.complexOptionType5)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.ComplexOptionType3.ComplexOptionType5, rhs: ProtobufUnittest.ComplexOptionType3.ComplexOptionType5) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasPlugh == rhs.hasPlugh) && (!lhs.hasPlugh || lhs.plugh == rhs.plugh)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.ComplexOpt6, rhs: ProtobufUnittest.ComplexOpt6) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasXyzzy == rhs.hasXyzzy) && (!lhs.hasXyzzy || lhs.xyzzy == rhs.xyzzy)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.VariousComplexOptions, rhs: ProtobufUnittest.VariousComplexOptions) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.AggregateMessageSet, rhs: ProtobufUnittest.AggregateMessageSet) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && lhs.isEqualExtensionsInOther(rhs, startInclusive:Int32(4), endExclusive:Int32(2147483647))
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.AggregateMessageSetElement, rhs: ProtobufUnittest.AggregateMessageSetElement) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasS == rhs.hasS) && (!lhs.hasS || lhs.s == rhs.s)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.Aggregate, rhs: ProtobufUnittest.Aggregate) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasI == rhs.hasI) && (!lhs.hasI || lhs.i == rhs.i)
  fieldCheck = fieldCheck && (lhs.hasS == rhs.hasS) && (!lhs.hasS || lhs.s == rhs.s)
  fieldCheck = fieldCheck && (lhs.hasSub == rhs.hasSub) && (!lhs.hasSub || lhs.sub == rhs.sub)
  fieldCheck = fieldCheck && (lhs.hasFile == rhs.hasFile) && (!lhs.hasFile || lhs.file == rhs.file)
  fieldCheck = fieldCheck && (lhs.hasMset == rhs.hasMset) && (!lhs.hasMset || lhs.mset == rhs.mset)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.AggregateMessage, rhs: ProtobufUnittest.AggregateMessage) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasFieldname == rhs.hasFieldname) && (!lhs.hasFieldname || lhs.fieldname == rhs.fieldname)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.NestedOptionType, rhs: ProtobufUnittest.NestedOptionType) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal func == (lhs: ProtobufUnittest.NestedOptionType.NestedMessage, rhs: ProtobufUnittest.NestedOptionType.NestedMessage) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasNestedField == rhs.hasNestedField) && (!lhs.hasNestedField || lhs.nestedField == rhs.nestedField)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal var UnittestCustomOptionsRootfileOpt1:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootfileOpt1Static
   }
}
internal var UnittestCustomOptionsRootmessageOpt1:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootmessageOpt1Static
   }
}
internal var UnittestCustomOptionsRootfieldOpt1:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootfieldOpt1Static
   }
}
// This is useful for testing that we correctly register default values for
// extension options.
internal var UnittestCustomOptionsRootfieldOpt2:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootfieldOpt2Static
   }
}
internal var UnittestCustomOptionsRootenumOpt1:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootenumOpt1Static
   }
}
internal var UnittestCustomOptionsRootenumValueOpt1:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootenumValueOpt1Static
   }
}
internal var UnittestCustomOptionsRootserviceOpt1:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootserviceOpt1Static
   }
}
internal var UnittestCustomOptionsRootmethodOpt1:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootmethodOpt1Static
   }
}
internal var UnittestCustomOptionsRootboolOpt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootboolOptStatic
   }
}
internal var UnittestCustomOptionsRootint32Opt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootint32OptStatic
   }
}
internal var UnittestCustomOptionsRootint64Opt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootint64OptStatic
   }
}
internal var UnittestCustomOptionsRootuint32Opt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootuint32OptStatic
   }
}
internal var UnittestCustomOptionsRootuint64Opt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootuint64OptStatic
   }
}
internal var UnittestCustomOptionsRootsint32Opt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootsint32OptStatic
   }
}
internal var UnittestCustomOptionsRootsint64Opt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootsint64OptStatic
   }
}
internal var UnittestCustomOptionsRootfixed32Opt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootfixed32OptStatic
   }
}
internal var UnittestCustomOptionsRootfixed64Opt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootfixed64OptStatic
   }
}
internal var UnittestCustomOptionsRootsfixed32Opt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootsfixed32OptStatic
   }
}
internal var UnittestCustomOptionsRootsfixed64Opt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootsfixed64OptStatic
   }
}
internal var UnittestCustomOptionsRootfloatOpt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootfloatOptStatic
   }
}
internal var UnittestCustomOptionsRootdoubleOpt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootdoubleOptStatic
   }
}
internal var UnittestCustomOptionsRootstringOpt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootstringOptStatic
   }
}
internal var UnittestCustomOptionsRootbytesOpt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootbytesOptStatic
   }
}
internal var UnittestCustomOptionsRootenumOpt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootenumOptStatic
   }
}
internal var UnittestCustomOptionsRootmessageTypeOpt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootmessageTypeOptStatic
   }
}
internal var UnittestCustomOptionsRootquux:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootquuxStatic
   }
}
internal var UnittestCustomOptionsRootcorge:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootcorgeStatic
   }
}
internal var UnittestCustomOptionsRootgrault:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootgraultStatic
   }
}
internal var UnittestCustomOptionsRootgarply:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootgarplyStatic
   }
}
internal var UnittestCustomOptionsRootcomplexOpt1:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootcomplexOpt1Static
   }
}
internal var UnittestCustomOptionsRootcomplexOpt2:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootcomplexOpt2Static
   }
}
internal var UnittestCustomOptionsRootcomplexOpt3:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootcomplexOpt3Static
   }
}
internal var UnittestCustomOptionsRootcomplexOpt6:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootcomplexOpt6Static
   }
}
internal var UnittestCustomOptionsRootfileopt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootfileoptStatic
   }
}
internal var UnittestCustomOptionsRootmsgopt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootmsgoptStatic
   }
}
internal var UnittestCustomOptionsRootfieldopt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootfieldoptStatic
   }
}
internal var UnittestCustomOptionsRootenumopt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootenumoptStatic
   }
}
internal var UnittestCustomOptionsRootenumvalopt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootenumvaloptStatic
   }
}
internal var UnittestCustomOptionsRootserviceopt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootserviceoptStatic
   }
}
internal var UnittestCustomOptionsRootmethodopt:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootmethodoptStatic
   }
}
internal var ComplexOptionType2ComplexOptionType4complexOpt4:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.ComplexOptionType2ComplexOptionType4complexOpt4Static
   }
}
internal var AggregateMessageSetElementmessageSetExtension:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.AggregateMessageSetElementmessageSetExtensionStatic
   }
}
internal var Aggregatenested:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.AggregatenestedStatic
   }
}
internal var NestedOptionTypenestedExtension:ConcreateExtensionField {
   get {
       return ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.NestedOptionTypenestedExtensionStatic
   }
}
internal extension ProtobufUnittest {
  internal struct UnittestCustomOptionsRoot {
    internal static var sharedInstance : UnittestCustomOptionsRoot {
     struct Static {
         static let instance : UnittestCustomOptionsRoot = UnittestCustomOptionsRoot()
     }
     return Static.instance
    }
    var UnittestCustomOptionsRootfileOpt1Static:ConcreateExtensionField
    var UnittestCustomOptionsRootmessageOpt1Static:ConcreateExtensionField
    var UnittestCustomOptionsRootfieldOpt1Static:ConcreateExtensionField
    var UnittestCustomOptionsRootfieldOpt2Static:ConcreateExtensionField
    var UnittestCustomOptionsRootenumOpt1Static:ConcreateExtensionField
    var UnittestCustomOptionsRootenumValueOpt1Static:ConcreateExtensionField
    var UnittestCustomOptionsRootserviceOpt1Static:ConcreateExtensionField
    var UnittestCustomOptionsRootmethodOpt1Static:ConcreateExtensionField
    var UnittestCustomOptionsRootboolOptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootint32OptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootint64OptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootuint32OptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootuint64OptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootsint32OptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootsint64OptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootfixed32OptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootfixed64OptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootsfixed32OptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootsfixed64OptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootfloatOptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootdoubleOptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootstringOptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootbytesOptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootenumOptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootmessageTypeOptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootquuxStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootcorgeStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootgraultStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootgarplyStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootcomplexOpt1Static:ConcreateExtensionField
    var UnittestCustomOptionsRootcomplexOpt2Static:ConcreateExtensionField
    var UnittestCustomOptionsRootcomplexOpt3Static:ConcreateExtensionField
    var UnittestCustomOptionsRootcomplexOpt6Static:ConcreateExtensionField
    var UnittestCustomOptionsRootfileoptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootmsgoptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootfieldoptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootenumoptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootenumvaloptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootserviceoptStatic:ConcreateExtensionField
    var UnittestCustomOptionsRootmethodoptStatic:ConcreateExtensionField
    var ComplexOptionType2ComplexOptionType4complexOpt4Static:ConcreateExtensionField
    var AggregateMessageSetElementmessageSetExtensionStatic:ConcreateExtensionField
    var AggregatenestedStatic:ConcreateExtensionField
    var NestedOptionTypenestedExtensionStatic:ConcreateExtensionField
    internal var extensionRegistry:ExtensionRegistry

    init() {
      UnittestCustomOptionsRootfileOpt1Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeUInt64, extendedClass:Google.Protobuf.FileOptions.self, fieldNumber: 7736974, defaultValue:UInt64(0), messageOrGroupClass:Int64.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootmessageOpt1Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeInt32, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7739036, defaultValue:Int32(0), messageOrGroupClass:Int32.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootfieldOpt1Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeFixed64, extendedClass:Google.Protobuf.FieldOptions.self, fieldNumber: 7740936, defaultValue:UInt64(0), messageOrGroupClass:Int64.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootfieldOpt2Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeInt32, extendedClass:Google.Protobuf.FieldOptions.self, fieldNumber: 7753913, defaultValue:Int32(42), messageOrGroupClass:Int32.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootenumOpt1Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeSFixed32, extendedClass:Google.Protobuf.EnumOptions.self, fieldNumber: 7753576, defaultValue:Int32(0), messageOrGroupClass:Int32.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootenumValueOpt1Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeInt32, extendedClass:Google.Protobuf.EnumValueOptions.self, fieldNumber: 1560678, defaultValue:Int32(0), messageOrGroupClass:Int32.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootserviceOpt1Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeSInt64, extendedClass:Google.Protobuf.ServiceOptions.self, fieldNumber: 7887650, defaultValue:Int64(0), messageOrGroupClass:Int64.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootmethodOpt1Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeEnum, extendedClass:Google.Protobuf.MethodOptions.self, fieldNumber: 7890860, defaultValue:ProtobufUnittest.MethodOpt1.Methodopt1Val1.rawValue, messageOrGroupClass:Int32.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootboolOptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeBool, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7706090, defaultValue:false, messageOrGroupClass:Bool.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootint32OptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeInt32, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7705709, defaultValue:Int32(0), messageOrGroupClass:Int32.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootint64OptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeInt64, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7705542, defaultValue:Int64(0), messageOrGroupClass:Int64.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootuint32OptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeUInt32, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7704880, defaultValue:UInt32(0), messageOrGroupClass:Int32.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootuint64OptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeUInt64, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7702367, defaultValue:UInt64(0), messageOrGroupClass:Int64.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootsint32OptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeSInt32, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7701568, defaultValue:Int32(0), messageOrGroupClass:Int32.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootsint64OptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeSInt64, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7700863, defaultValue:Int64(0), messageOrGroupClass:Int64.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootfixed32OptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeFixed32, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7700307, defaultValue:UInt32(0), messageOrGroupClass:Int32.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootfixed64OptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeFixed64, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7700194, defaultValue:UInt64(0), messageOrGroupClass:Int64.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootsfixed32OptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeSFixed32, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7698645, defaultValue:Int32(0), messageOrGroupClass:Int32.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootsfixed64OptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeSFixed64, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7685475, defaultValue:Int64(0), messageOrGroupClass:Int64.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootfloatOptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeFloat, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7675390, defaultValue:Float(0), messageOrGroupClass:Float.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootdoubleOptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeDouble, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7673293, defaultValue:Double(0), messageOrGroupClass:Double.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootstringOptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeString, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7673285, defaultValue:"", messageOrGroupClass:String.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootbytesOptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeBytes, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7673238, defaultValue:NSData(), messageOrGroupClass:NSData.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootenumOptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeEnum, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7673233, defaultValue:ProtobufUnittest.DummyMessageContainingEnum.TestEnumType.TestOptionEnumType1.rawValue, messageOrGroupClass:Int32.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootmessageTypeOptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7665967, defaultValue:ProtobufUnittest.DummyMessageInvalidAsOptionType(), messageOrGroupClass:ProtobufUnittest.DummyMessageInvalidAsOptionType.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootquuxStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeInt32, extendedClass:ProtobufUnittest.ComplexOptionType1.self, fieldNumber: 7663707, defaultValue:Int32(0), messageOrGroupClass:Int32.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootcorgeStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:ProtobufUnittest.ComplexOptionType1.self, fieldNumber: 7663442, defaultValue:ProtobufUnittest.ComplexOptionType3(), messageOrGroupClass:ProtobufUnittest.ComplexOptionType3.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootgraultStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeInt32, extendedClass:ProtobufUnittest.ComplexOptionType2.self, fieldNumber: 7650927, defaultValue:Int32(0), messageOrGroupClass:Int32.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootgarplyStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:ProtobufUnittest.ComplexOptionType2.self, fieldNumber: 7649992, defaultValue:ProtobufUnittest.ComplexOptionType1(), messageOrGroupClass:ProtobufUnittest.ComplexOptionType1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootcomplexOpt1Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7646756, defaultValue:ProtobufUnittest.ComplexOptionType1(), messageOrGroupClass:ProtobufUnittest.ComplexOptionType1.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootcomplexOpt2Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7636949, defaultValue:ProtobufUnittest.ComplexOptionType2(), messageOrGroupClass:ProtobufUnittest.ComplexOptionType2.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootcomplexOpt3Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7636463, defaultValue:ProtobufUnittest.ComplexOptionType3(), messageOrGroupClass:ProtobufUnittest.ComplexOptionType3.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootcomplexOpt6Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeGroup, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7595468, defaultValue:ProtobufUnittest.ComplexOpt6(), messageOrGroupClass:ProtobufUnittest.ComplexOpt6.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootfileoptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Google.Protobuf.FileOptions.self, fieldNumber: 15478479, defaultValue:ProtobufUnittest.Aggregate(), messageOrGroupClass:ProtobufUnittest.Aggregate.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootmsgoptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 15480088, defaultValue:ProtobufUnittest.Aggregate(), messageOrGroupClass:ProtobufUnittest.Aggregate.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootfieldoptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Google.Protobuf.FieldOptions.self, fieldNumber: 15481374, defaultValue:ProtobufUnittest.Aggregate(), messageOrGroupClass:ProtobufUnittest.Aggregate.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootenumoptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Google.Protobuf.EnumOptions.self, fieldNumber: 15483218, defaultValue:ProtobufUnittest.Aggregate(), messageOrGroupClass:ProtobufUnittest.Aggregate.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootenumvaloptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Google.Protobuf.EnumValueOptions.self, fieldNumber: 15486921, defaultValue:ProtobufUnittest.Aggregate(), messageOrGroupClass:ProtobufUnittest.Aggregate.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootserviceoptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Google.Protobuf.ServiceOptions.self, fieldNumber: 15497145, defaultValue:ProtobufUnittest.Aggregate(), messageOrGroupClass:ProtobufUnittest.Aggregate.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      UnittestCustomOptionsRootmethodoptStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Google.Protobuf.MethodOptions.self, fieldNumber: 15512713, defaultValue:ProtobufUnittest.Aggregate(), messageOrGroupClass:ProtobufUnittest.Aggregate.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      ComplexOptionType2ComplexOptionType4complexOpt4Static = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Google.Protobuf.MessageOptions.self, fieldNumber: 7633546, defaultValue:ProtobufUnittest.ComplexOptionType2.ComplexOptionType4(), messageOrGroupClass:ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      AggregateMessageSetElementmessageSetExtensionStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:ProtobufUnittest.AggregateMessageSet.self, fieldNumber: 15447542, defaultValue:ProtobufUnittest.AggregateMessageSetElement(), messageOrGroupClass:ProtobufUnittest.AggregateMessageSetElement.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:true)
      AggregatenestedStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeMessage, extendedClass:Google.Protobuf.FileOptions.self, fieldNumber: 15476903, defaultValue:ProtobufUnittest.Aggregate(), messageOrGroupClass:ProtobufUnittest.Aggregate.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      NestedOptionTypenestedExtensionStatic = ConcreateExtensionField(type:ExtensionType.ExtensionTypeInt32, extendedClass:Google.Protobuf.FileOptions.self, fieldNumber: 7912573, defaultValue:Int32(0), messageOrGroupClass:Int32.self, isRepeated:false, isPacked:false, isMessageSetWireFormat:false)
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
      Google.Protobuf.DescriptorRoot.sharedInstance.registerAllExtensions(extensionRegistry)
    }
    internal func registerAllExtensions(registry:ExtensionRegistry) {
      registry.addExtension(UnittestCustomOptionsRootfileOpt1Static)
      registry.addExtension(UnittestCustomOptionsRootmessageOpt1Static)
      registry.addExtension(UnittestCustomOptionsRootfieldOpt1Static)
      registry.addExtension(UnittestCustomOptionsRootfieldOpt2Static)
      registry.addExtension(UnittestCustomOptionsRootenumOpt1Static)
      registry.addExtension(UnittestCustomOptionsRootenumValueOpt1Static)
      registry.addExtension(UnittestCustomOptionsRootserviceOpt1Static)
      registry.addExtension(UnittestCustomOptionsRootmethodOpt1Static)
      registry.addExtension(UnittestCustomOptionsRootboolOptStatic)
      registry.addExtension(UnittestCustomOptionsRootint32OptStatic)
      registry.addExtension(UnittestCustomOptionsRootint64OptStatic)
      registry.addExtension(UnittestCustomOptionsRootuint32OptStatic)
      registry.addExtension(UnittestCustomOptionsRootuint64OptStatic)
      registry.addExtension(UnittestCustomOptionsRootsint32OptStatic)
      registry.addExtension(UnittestCustomOptionsRootsint64OptStatic)
      registry.addExtension(UnittestCustomOptionsRootfixed32OptStatic)
      registry.addExtension(UnittestCustomOptionsRootfixed64OptStatic)
      registry.addExtension(UnittestCustomOptionsRootsfixed32OptStatic)
      registry.addExtension(UnittestCustomOptionsRootsfixed64OptStatic)
      registry.addExtension(UnittestCustomOptionsRootfloatOptStatic)
      registry.addExtension(UnittestCustomOptionsRootdoubleOptStatic)
      registry.addExtension(UnittestCustomOptionsRootstringOptStatic)
      registry.addExtension(UnittestCustomOptionsRootbytesOptStatic)
      registry.addExtension(UnittestCustomOptionsRootenumOptStatic)
      registry.addExtension(UnittestCustomOptionsRootmessageTypeOptStatic)
      registry.addExtension(UnittestCustomOptionsRootquuxStatic)
      registry.addExtension(UnittestCustomOptionsRootcorgeStatic)
      registry.addExtension(UnittestCustomOptionsRootgraultStatic)
      registry.addExtension(UnittestCustomOptionsRootgarplyStatic)
      registry.addExtension(UnittestCustomOptionsRootcomplexOpt1Static)
      registry.addExtension(UnittestCustomOptionsRootcomplexOpt2Static)
      registry.addExtension(UnittestCustomOptionsRootcomplexOpt3Static)
      registry.addExtension(UnittestCustomOptionsRootcomplexOpt6Static)
      registry.addExtension(UnittestCustomOptionsRootfileoptStatic)
      registry.addExtension(UnittestCustomOptionsRootmsgoptStatic)
      registry.addExtension(UnittestCustomOptionsRootfieldoptStatic)
      registry.addExtension(UnittestCustomOptionsRootenumoptStatic)
      registry.addExtension(UnittestCustomOptionsRootenumvaloptStatic)
      registry.addExtension(UnittestCustomOptionsRootserviceoptStatic)
      registry.addExtension(UnittestCustomOptionsRootmethodoptStatic)
      registry.addExtension(ComplexOptionType2ComplexOptionType4complexOpt4Static)
      registry.addExtension(AggregateMessageSetElementmessageSetExtensionStatic)
      registry.addExtension(AggregatenestedStatic)
      registry.addExtension(NestedOptionTypenestedExtensionStatic)
    }
    internal static func fileOpt1() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootfileOpt1Static
    }
    internal static func messageOpt1() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootmessageOpt1Static
    }
    internal static func fieldOpt1() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootfieldOpt1Static
    }
    internal static func fieldOpt2() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootfieldOpt2Static
    }
    internal static func enumOpt1() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootenumOpt1Static
    }
    internal static func enumValueOpt1() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootenumValueOpt1Static
    }
    internal static func serviceOpt1() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootserviceOpt1Static
    }
    internal static func methodOpt1() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootmethodOpt1Static
    }
    internal static func boolOpt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootboolOptStatic
    }
    internal static func int32Opt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootint32OptStatic
    }
    internal static func int64Opt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootint64OptStatic
    }
    internal static func uint32Opt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootuint32OptStatic
    }
    internal static func uint64Opt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootuint64OptStatic
    }
    internal static func sint32Opt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootsint32OptStatic
    }
    internal static func sint64Opt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootsint64OptStatic
    }
    internal static func fixed32Opt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootfixed32OptStatic
    }
    internal static func fixed64Opt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootfixed64OptStatic
    }
    internal static func sfixed32Opt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootsfixed32OptStatic
    }
    internal static func sfixed64Opt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootsfixed64OptStatic
    }
    internal static func floatOpt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootfloatOptStatic
    }
    internal static func doubleOpt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootdoubleOptStatic
    }
    internal static func stringOpt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootstringOptStatic
    }
    internal static func bytesOpt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootbytesOptStatic
    }
    internal static func enumOpt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootenumOptStatic
    }
    internal static func messageTypeOpt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootmessageTypeOptStatic
    }
    internal static func quux() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootquuxStatic
    }
    internal static func corge() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootcorgeStatic
    }
    internal static func grault() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootgraultStatic
    }
    internal static func garply() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootgarplyStatic
    }
    internal static func complexOpt1() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootcomplexOpt1Static
    }
    internal static func complexOpt2() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootcomplexOpt2Static
    }
    internal static func complexOpt3() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootcomplexOpt3Static
    }
    internal static func complexOpt6() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootcomplexOpt6Static
    }
    internal static func fileopt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootfileoptStatic
    }
    internal static func msgopt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootmsgoptStatic
    }
    internal static func fieldopt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootfieldoptStatic
    }
    internal static func enumopt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootenumoptStatic
    }
    internal static func enumvalopt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootenumvaloptStatic
    }
    internal static func serviceopt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootserviceoptStatic
    }
    internal static func methodopt() -> ConcreateExtensionField {
         return UnittestCustomOptionsRoot.sharedInstance.UnittestCustomOptionsRootmethodoptStatic
    }
  }



  //Enum type declaration start 

  internal enum MethodOpt1:Int32 {
    case Methodopt1Val1 = 1
    case Methodopt1Val2 = 2

  }

  //Enum type declaration end 



  //Enum type declaration start 

  internal enum AggregateEnum:Int32 {
    case Value = 1

  }

  //Enum type declaration end 

  // A test message with custom options at all possible locations (and also some
  // regular options, to make sure they interact nicely).
  final internal class TestMessageWithCustomOptions : GeneratedMessage, GeneratedMessageProtocol {


      //Enum type declaration start 

      internal enum AnEnum:Int32 {
        case AnenumVal1 = 1
        case AnenumVal2 = 2

      }

      //Enum type declaration end 

    private(set) var hasField1:Bool = false
    private(set) var field1:String = ""

    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasField1 {
        try output.writeString(1, value:field1)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasField1 {
        serialize_size += field1.computeStringSize(1)
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.TestMessageWithCustomOptions> {
      var mergedArray = Array<ProtobufUnittest.TestMessageWithCustomOptions>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.TestMessageWithCustomOptions? {
      return try ProtobufUnittest.TestMessageWithCustomOptions.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.TestMessageWithCustomOptions {
      return try ProtobufUnittest.TestMessageWithCustomOptions.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.TestMessageWithCustomOptions {
      return try ProtobufUnittest.TestMessageWithCustomOptions.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.TestMessageWithCustomOptions {
      return try ProtobufUnittest.TestMessageWithCustomOptions.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.TestMessageWithCustomOptions {
      return try ProtobufUnittest.TestMessageWithCustomOptions.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.TestMessageWithCustomOptions {
      return try ProtobufUnittest.TestMessageWithCustomOptions.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.TestMessageWithCustomOptions {
      return try ProtobufUnittest.TestMessageWithCustomOptions.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.TestMessageWithCustomOptions.Builder {
      return ProtobufUnittest.TestMessageWithCustomOptions.classBuilder() as! ProtobufUnittest.TestMessageWithCustomOptions.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.TestMessageWithCustomOptions.Builder {
      return classBuilder() as! ProtobufUnittest.TestMessageWithCustomOptions.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.TestMessageWithCustomOptions.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.TestMessageWithCustomOptions.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.TestMessageWithCustomOptions.Builder {
      return try ProtobufUnittest.TestMessageWithCustomOptions.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.TestMessageWithCustomOptions) throws -> ProtobufUnittest.TestMessageWithCustomOptions.Builder {
      return try ProtobufUnittest.TestMessageWithCustomOptions.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      if hasField1 {
        output += "\(indent) field1: \(field1) \n"
      }
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasField1 {
               hashCode = (hashCode &* 31) &+ field1.hashValue
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.TestMessageWithCustomOptions"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.TestMessageWithCustomOptions"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.TestMessageWithCustomOptions.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.TestMessageWithCustomOptions = ProtobufUnittest.TestMessageWithCustomOptions()
      internal func getMessage() -> ProtobufUnittest.TestMessageWithCustomOptions {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      var hasField1:Bool {
           get {
                return builderResult.hasField1
           }
      }
      var field1:String {
           get {
                return builderResult.field1
           }
           set (value) {
               builderResult.hasField1 = true
               builderResult.field1 = value
           }
      }
      func setField1(value:String) -> ProtobufUnittest.TestMessageWithCustomOptions.Builder {
        self.field1 = value
        return self
      }
      internal func clearField1() -> ProtobufUnittest.TestMessageWithCustomOptions.Builder{
           builderResult.hasField1 = false
           builderResult.field1 = ""
           return self
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.TestMessageWithCustomOptions.Builder {
        builderResult = ProtobufUnittest.TestMessageWithCustomOptions()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.TestMessageWithCustomOptions.Builder {
        return try ProtobufUnittest.TestMessageWithCustomOptions.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.TestMessageWithCustomOptions {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.TestMessageWithCustomOptions {
        let returnMe:ProtobufUnittest.TestMessageWithCustomOptions = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.TestMessageWithCustomOptions) throws -> ProtobufUnittest.TestMessageWithCustomOptions.Builder {
        if other == ProtobufUnittest.TestMessageWithCustomOptions() {
         return self
        }
        if other.hasField1 {
             field1 = other.field1
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.TestMessageWithCustomOptions.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.TestMessageWithCustomOptions.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 10 :
            field1 = try input.readString()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  // A test RPC service with custom options at all possible locations (and also
  // some regular options, to make sure they interact nicely).
  final internal class CustomOptionFooRequest : GeneratedMessage, GeneratedMessageProtocol {
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.CustomOptionFooRequest> {
      var mergedArray = Array<ProtobufUnittest.CustomOptionFooRequest>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.CustomOptionFooRequest? {
      return try ProtobufUnittest.CustomOptionFooRequest.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.CustomOptionFooRequest {
      return try ProtobufUnittest.CustomOptionFooRequest.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionFooRequest {
      return try ProtobufUnittest.CustomOptionFooRequest.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.CustomOptionFooRequest {
      return try ProtobufUnittest.CustomOptionFooRequest.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionFooRequest {
      return try ProtobufUnittest.CustomOptionFooRequest.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.CustomOptionFooRequest {
      return try ProtobufUnittest.CustomOptionFooRequest.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionFooRequest {
      return try ProtobufUnittest.CustomOptionFooRequest.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.CustomOptionFooRequest.Builder {
      return ProtobufUnittest.CustomOptionFooRequest.classBuilder() as! ProtobufUnittest.CustomOptionFooRequest.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.CustomOptionFooRequest.Builder {
      return classBuilder() as! ProtobufUnittest.CustomOptionFooRequest.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.CustomOptionFooRequest.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.CustomOptionFooRequest.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.CustomOptionFooRequest.Builder {
      return try ProtobufUnittest.CustomOptionFooRequest.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.CustomOptionFooRequest) throws -> ProtobufUnittest.CustomOptionFooRequest.Builder {
      return try ProtobufUnittest.CustomOptionFooRequest.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.CustomOptionFooRequest"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.CustomOptionFooRequest"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.CustomOptionFooRequest.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.CustomOptionFooRequest = ProtobufUnittest.CustomOptionFooRequest()
      internal func getMessage() -> ProtobufUnittest.CustomOptionFooRequest {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.CustomOptionFooRequest.Builder {
        builderResult = ProtobufUnittest.CustomOptionFooRequest()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.CustomOptionFooRequest.Builder {
        return try ProtobufUnittest.CustomOptionFooRequest.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.CustomOptionFooRequest {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.CustomOptionFooRequest {
        let returnMe:ProtobufUnittest.CustomOptionFooRequest = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.CustomOptionFooRequest) throws -> ProtobufUnittest.CustomOptionFooRequest.Builder {
        if other == ProtobufUnittest.CustomOptionFooRequest() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.CustomOptionFooRequest.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionFooRequest.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final internal class CustomOptionFooResponse : GeneratedMessage, GeneratedMessageProtocol {
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.CustomOptionFooResponse> {
      var mergedArray = Array<ProtobufUnittest.CustomOptionFooResponse>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.CustomOptionFooResponse? {
      return try ProtobufUnittest.CustomOptionFooResponse.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.CustomOptionFooResponse {
      return try ProtobufUnittest.CustomOptionFooResponse.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionFooResponse {
      return try ProtobufUnittest.CustomOptionFooResponse.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.CustomOptionFooResponse {
      return try ProtobufUnittest.CustomOptionFooResponse.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionFooResponse {
      return try ProtobufUnittest.CustomOptionFooResponse.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.CustomOptionFooResponse {
      return try ProtobufUnittest.CustomOptionFooResponse.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionFooResponse {
      return try ProtobufUnittest.CustomOptionFooResponse.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.CustomOptionFooResponse.Builder {
      return ProtobufUnittest.CustomOptionFooResponse.classBuilder() as! ProtobufUnittest.CustomOptionFooResponse.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.CustomOptionFooResponse.Builder {
      return classBuilder() as! ProtobufUnittest.CustomOptionFooResponse.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.CustomOptionFooResponse.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.CustomOptionFooResponse.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.CustomOptionFooResponse.Builder {
      return try ProtobufUnittest.CustomOptionFooResponse.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.CustomOptionFooResponse) throws -> ProtobufUnittest.CustomOptionFooResponse.Builder {
      return try ProtobufUnittest.CustomOptionFooResponse.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.CustomOptionFooResponse"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.CustomOptionFooResponse"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.CustomOptionFooResponse.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.CustomOptionFooResponse = ProtobufUnittest.CustomOptionFooResponse()
      internal func getMessage() -> ProtobufUnittest.CustomOptionFooResponse {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.CustomOptionFooResponse.Builder {
        builderResult = ProtobufUnittest.CustomOptionFooResponse()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.CustomOptionFooResponse.Builder {
        return try ProtobufUnittest.CustomOptionFooResponse.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.CustomOptionFooResponse {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.CustomOptionFooResponse {
        let returnMe:ProtobufUnittest.CustomOptionFooResponse = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.CustomOptionFooResponse) throws -> ProtobufUnittest.CustomOptionFooResponse.Builder {
        if other == ProtobufUnittest.CustomOptionFooResponse() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.CustomOptionFooResponse.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionFooResponse.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final internal class CustomOptionFooClientMessage : GeneratedMessage, GeneratedMessageProtocol {
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.CustomOptionFooClientMessage> {
      var mergedArray = Array<ProtobufUnittest.CustomOptionFooClientMessage>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.CustomOptionFooClientMessage? {
      return try ProtobufUnittest.CustomOptionFooClientMessage.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.CustomOptionFooClientMessage {
      return try ProtobufUnittest.CustomOptionFooClientMessage.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionFooClientMessage {
      return try ProtobufUnittest.CustomOptionFooClientMessage.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.CustomOptionFooClientMessage {
      return try ProtobufUnittest.CustomOptionFooClientMessage.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionFooClientMessage {
      return try ProtobufUnittest.CustomOptionFooClientMessage.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.CustomOptionFooClientMessage {
      return try ProtobufUnittest.CustomOptionFooClientMessage.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionFooClientMessage {
      return try ProtobufUnittest.CustomOptionFooClientMessage.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.CustomOptionFooClientMessage.Builder {
      return ProtobufUnittest.CustomOptionFooClientMessage.classBuilder() as! ProtobufUnittest.CustomOptionFooClientMessage.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.CustomOptionFooClientMessage.Builder {
      return classBuilder() as! ProtobufUnittest.CustomOptionFooClientMessage.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.CustomOptionFooClientMessage.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.CustomOptionFooClientMessage.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.CustomOptionFooClientMessage.Builder {
      return try ProtobufUnittest.CustomOptionFooClientMessage.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.CustomOptionFooClientMessage) throws -> ProtobufUnittest.CustomOptionFooClientMessage.Builder {
      return try ProtobufUnittest.CustomOptionFooClientMessage.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.CustomOptionFooClientMessage"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.CustomOptionFooClientMessage"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.CustomOptionFooClientMessage.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.CustomOptionFooClientMessage = ProtobufUnittest.CustomOptionFooClientMessage()
      internal func getMessage() -> ProtobufUnittest.CustomOptionFooClientMessage {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.CustomOptionFooClientMessage.Builder {
        builderResult = ProtobufUnittest.CustomOptionFooClientMessage()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.CustomOptionFooClientMessage.Builder {
        return try ProtobufUnittest.CustomOptionFooClientMessage.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.CustomOptionFooClientMessage {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.CustomOptionFooClientMessage {
        let returnMe:ProtobufUnittest.CustomOptionFooClientMessage = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.CustomOptionFooClientMessage) throws -> ProtobufUnittest.CustomOptionFooClientMessage.Builder {
        if other == ProtobufUnittest.CustomOptionFooClientMessage() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.CustomOptionFooClientMessage.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionFooClientMessage.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final internal class CustomOptionFooServerMessage : GeneratedMessage, GeneratedMessageProtocol {
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.CustomOptionFooServerMessage> {
      var mergedArray = Array<ProtobufUnittest.CustomOptionFooServerMessage>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.CustomOptionFooServerMessage? {
      return try ProtobufUnittest.CustomOptionFooServerMessage.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.CustomOptionFooServerMessage {
      return try ProtobufUnittest.CustomOptionFooServerMessage.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionFooServerMessage {
      return try ProtobufUnittest.CustomOptionFooServerMessage.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.CustomOptionFooServerMessage {
      return try ProtobufUnittest.CustomOptionFooServerMessage.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionFooServerMessage {
      return try ProtobufUnittest.CustomOptionFooServerMessage.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.CustomOptionFooServerMessage {
      return try ProtobufUnittest.CustomOptionFooServerMessage.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionFooServerMessage {
      return try ProtobufUnittest.CustomOptionFooServerMessage.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.CustomOptionFooServerMessage.Builder {
      return ProtobufUnittest.CustomOptionFooServerMessage.classBuilder() as! ProtobufUnittest.CustomOptionFooServerMessage.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.CustomOptionFooServerMessage.Builder {
      return classBuilder() as! ProtobufUnittest.CustomOptionFooServerMessage.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.CustomOptionFooServerMessage.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.CustomOptionFooServerMessage.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.CustomOptionFooServerMessage.Builder {
      return try ProtobufUnittest.CustomOptionFooServerMessage.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.CustomOptionFooServerMessage) throws -> ProtobufUnittest.CustomOptionFooServerMessage.Builder {
      return try ProtobufUnittest.CustomOptionFooServerMessage.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.CustomOptionFooServerMessage"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.CustomOptionFooServerMessage"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.CustomOptionFooServerMessage.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.CustomOptionFooServerMessage = ProtobufUnittest.CustomOptionFooServerMessage()
      internal func getMessage() -> ProtobufUnittest.CustomOptionFooServerMessage {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.CustomOptionFooServerMessage.Builder {
        builderResult = ProtobufUnittest.CustomOptionFooServerMessage()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.CustomOptionFooServerMessage.Builder {
        return try ProtobufUnittest.CustomOptionFooServerMessage.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.CustomOptionFooServerMessage {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.CustomOptionFooServerMessage {
        let returnMe:ProtobufUnittest.CustomOptionFooServerMessage = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.CustomOptionFooServerMessage) throws -> ProtobufUnittest.CustomOptionFooServerMessage.Builder {
        if other == ProtobufUnittest.CustomOptionFooServerMessage() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.CustomOptionFooServerMessage.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionFooServerMessage.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final internal class DummyMessageContainingEnum : GeneratedMessage, GeneratedMessageProtocol {


      //Enum type declaration start 

      internal enum TestEnumType:Int32 {
        case TestOptionEnumType1 = 22
        case TestOptionEnumType2 = -23

      }

      //Enum type declaration end 

    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.DummyMessageContainingEnum> {
      var mergedArray = Array<ProtobufUnittest.DummyMessageContainingEnum>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.DummyMessageContainingEnum? {
      return try ProtobufUnittest.DummyMessageContainingEnum.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.DummyMessageContainingEnum {
      return try ProtobufUnittest.DummyMessageContainingEnum.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.DummyMessageContainingEnum {
      return try ProtobufUnittest.DummyMessageContainingEnum.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.DummyMessageContainingEnum {
      return try ProtobufUnittest.DummyMessageContainingEnum.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.DummyMessageContainingEnum {
      return try ProtobufUnittest.DummyMessageContainingEnum.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.DummyMessageContainingEnum {
      return try ProtobufUnittest.DummyMessageContainingEnum.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.DummyMessageContainingEnum {
      return try ProtobufUnittest.DummyMessageContainingEnum.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.DummyMessageContainingEnum.Builder {
      return ProtobufUnittest.DummyMessageContainingEnum.classBuilder() as! ProtobufUnittest.DummyMessageContainingEnum.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.DummyMessageContainingEnum.Builder {
      return classBuilder() as! ProtobufUnittest.DummyMessageContainingEnum.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.DummyMessageContainingEnum.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.DummyMessageContainingEnum.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.DummyMessageContainingEnum.Builder {
      return try ProtobufUnittest.DummyMessageContainingEnum.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.DummyMessageContainingEnum) throws -> ProtobufUnittest.DummyMessageContainingEnum.Builder {
      return try ProtobufUnittest.DummyMessageContainingEnum.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.DummyMessageContainingEnum"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.DummyMessageContainingEnum"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.DummyMessageContainingEnum.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.DummyMessageContainingEnum = ProtobufUnittest.DummyMessageContainingEnum()
      internal func getMessage() -> ProtobufUnittest.DummyMessageContainingEnum {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.DummyMessageContainingEnum.Builder {
        builderResult = ProtobufUnittest.DummyMessageContainingEnum()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.DummyMessageContainingEnum.Builder {
        return try ProtobufUnittest.DummyMessageContainingEnum.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.DummyMessageContainingEnum {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.DummyMessageContainingEnum {
        let returnMe:ProtobufUnittest.DummyMessageContainingEnum = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.DummyMessageContainingEnum) throws -> ProtobufUnittest.DummyMessageContainingEnum.Builder {
        if other == ProtobufUnittest.DummyMessageContainingEnum() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.DummyMessageContainingEnum.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.DummyMessageContainingEnum.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final internal class DummyMessageInvalidAsOptionType : GeneratedMessage, GeneratedMessageProtocol {
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.DummyMessageInvalidAsOptionType> {
      var mergedArray = Array<ProtobufUnittest.DummyMessageInvalidAsOptionType>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.DummyMessageInvalidAsOptionType? {
      return try ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.DummyMessageInvalidAsOptionType {
      return try ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.DummyMessageInvalidAsOptionType {
      return try ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.DummyMessageInvalidAsOptionType {
      return try ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.DummyMessageInvalidAsOptionType {
      return try ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.DummyMessageInvalidAsOptionType {
      return try ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.DummyMessageInvalidAsOptionType {
      return try ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder {
      return ProtobufUnittest.DummyMessageInvalidAsOptionType.classBuilder() as! ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder {
      return classBuilder() as! ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder {
      return try ProtobufUnittest.DummyMessageInvalidAsOptionType.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.DummyMessageInvalidAsOptionType) throws -> ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder {
      return try ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.DummyMessageInvalidAsOptionType"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.DummyMessageInvalidAsOptionType"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.DummyMessageInvalidAsOptionType.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.DummyMessageInvalidAsOptionType = ProtobufUnittest.DummyMessageInvalidAsOptionType()
      internal func getMessage() -> ProtobufUnittest.DummyMessageInvalidAsOptionType {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder {
        builderResult = ProtobufUnittest.DummyMessageInvalidAsOptionType()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder {
        return try ProtobufUnittest.DummyMessageInvalidAsOptionType.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.DummyMessageInvalidAsOptionType {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.DummyMessageInvalidAsOptionType {
        let returnMe:ProtobufUnittest.DummyMessageInvalidAsOptionType = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.DummyMessageInvalidAsOptionType) throws -> ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder {
        if other == ProtobufUnittest.DummyMessageInvalidAsOptionType() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.DummyMessageInvalidAsOptionType.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final internal class CustomOptionMinIntegerValues : GeneratedMessage, GeneratedMessageProtocol {
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.CustomOptionMinIntegerValues> {
      var mergedArray = Array<ProtobufUnittest.CustomOptionMinIntegerValues>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.CustomOptionMinIntegerValues? {
      return try ProtobufUnittest.CustomOptionMinIntegerValues.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.CustomOptionMinIntegerValues {
      return try ProtobufUnittest.CustomOptionMinIntegerValues.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionMinIntegerValues {
      return try ProtobufUnittest.CustomOptionMinIntegerValues.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.CustomOptionMinIntegerValues {
      return try ProtobufUnittest.CustomOptionMinIntegerValues.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionMinIntegerValues {
      return try ProtobufUnittest.CustomOptionMinIntegerValues.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.CustomOptionMinIntegerValues {
      return try ProtobufUnittest.CustomOptionMinIntegerValues.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionMinIntegerValues {
      return try ProtobufUnittest.CustomOptionMinIntegerValues.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.CustomOptionMinIntegerValues.Builder {
      return ProtobufUnittest.CustomOptionMinIntegerValues.classBuilder() as! ProtobufUnittest.CustomOptionMinIntegerValues.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.CustomOptionMinIntegerValues.Builder {
      return classBuilder() as! ProtobufUnittest.CustomOptionMinIntegerValues.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.CustomOptionMinIntegerValues.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.CustomOptionMinIntegerValues.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.CustomOptionMinIntegerValues.Builder {
      return try ProtobufUnittest.CustomOptionMinIntegerValues.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.CustomOptionMinIntegerValues) throws -> ProtobufUnittest.CustomOptionMinIntegerValues.Builder {
      return try ProtobufUnittest.CustomOptionMinIntegerValues.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.CustomOptionMinIntegerValues"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.CustomOptionMinIntegerValues"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.CustomOptionMinIntegerValues.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.CustomOptionMinIntegerValues = ProtobufUnittest.CustomOptionMinIntegerValues()
      internal func getMessage() -> ProtobufUnittest.CustomOptionMinIntegerValues {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.CustomOptionMinIntegerValues.Builder {
        builderResult = ProtobufUnittest.CustomOptionMinIntegerValues()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.CustomOptionMinIntegerValues.Builder {
        return try ProtobufUnittest.CustomOptionMinIntegerValues.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.CustomOptionMinIntegerValues {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.CustomOptionMinIntegerValues {
        let returnMe:ProtobufUnittest.CustomOptionMinIntegerValues = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.CustomOptionMinIntegerValues) throws -> ProtobufUnittest.CustomOptionMinIntegerValues.Builder {
        if other == ProtobufUnittest.CustomOptionMinIntegerValues() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.CustomOptionMinIntegerValues.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionMinIntegerValues.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final internal class CustomOptionMaxIntegerValues : GeneratedMessage, GeneratedMessageProtocol {
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.CustomOptionMaxIntegerValues> {
      var mergedArray = Array<ProtobufUnittest.CustomOptionMaxIntegerValues>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.CustomOptionMaxIntegerValues? {
      return try ProtobufUnittest.CustomOptionMaxIntegerValues.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.CustomOptionMaxIntegerValues {
      return try ProtobufUnittest.CustomOptionMaxIntegerValues.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionMaxIntegerValues {
      return try ProtobufUnittest.CustomOptionMaxIntegerValues.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.CustomOptionMaxIntegerValues {
      return try ProtobufUnittest.CustomOptionMaxIntegerValues.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionMaxIntegerValues {
      return try ProtobufUnittest.CustomOptionMaxIntegerValues.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.CustomOptionMaxIntegerValues {
      return try ProtobufUnittest.CustomOptionMaxIntegerValues.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionMaxIntegerValues {
      return try ProtobufUnittest.CustomOptionMaxIntegerValues.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.CustomOptionMaxIntegerValues.Builder {
      return ProtobufUnittest.CustomOptionMaxIntegerValues.classBuilder() as! ProtobufUnittest.CustomOptionMaxIntegerValues.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.CustomOptionMaxIntegerValues.Builder {
      return classBuilder() as! ProtobufUnittest.CustomOptionMaxIntegerValues.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.CustomOptionMaxIntegerValues.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.CustomOptionMaxIntegerValues.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.CustomOptionMaxIntegerValues.Builder {
      return try ProtobufUnittest.CustomOptionMaxIntegerValues.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.CustomOptionMaxIntegerValues) throws -> ProtobufUnittest.CustomOptionMaxIntegerValues.Builder {
      return try ProtobufUnittest.CustomOptionMaxIntegerValues.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.CustomOptionMaxIntegerValues"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.CustomOptionMaxIntegerValues"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.CustomOptionMaxIntegerValues.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.CustomOptionMaxIntegerValues = ProtobufUnittest.CustomOptionMaxIntegerValues()
      internal func getMessage() -> ProtobufUnittest.CustomOptionMaxIntegerValues {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.CustomOptionMaxIntegerValues.Builder {
        builderResult = ProtobufUnittest.CustomOptionMaxIntegerValues()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.CustomOptionMaxIntegerValues.Builder {
        return try ProtobufUnittest.CustomOptionMaxIntegerValues.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.CustomOptionMaxIntegerValues {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.CustomOptionMaxIntegerValues {
        let returnMe:ProtobufUnittest.CustomOptionMaxIntegerValues = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.CustomOptionMaxIntegerValues) throws -> ProtobufUnittest.CustomOptionMaxIntegerValues.Builder {
        if other == ProtobufUnittest.CustomOptionMaxIntegerValues() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.CustomOptionMaxIntegerValues.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionMaxIntegerValues.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final internal class CustomOptionOtherValues : GeneratedMessage, GeneratedMessageProtocol {
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.CustomOptionOtherValues> {
      var mergedArray = Array<ProtobufUnittest.CustomOptionOtherValues>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.CustomOptionOtherValues? {
      return try ProtobufUnittest.CustomOptionOtherValues.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.CustomOptionOtherValues {
      return try ProtobufUnittest.CustomOptionOtherValues.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionOtherValues {
      return try ProtobufUnittest.CustomOptionOtherValues.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.CustomOptionOtherValues {
      return try ProtobufUnittest.CustomOptionOtherValues.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionOtherValues {
      return try ProtobufUnittest.CustomOptionOtherValues.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.CustomOptionOtherValues {
      return try ProtobufUnittest.CustomOptionOtherValues.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionOtherValues {
      return try ProtobufUnittest.CustomOptionOtherValues.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.CustomOptionOtherValues.Builder {
      return ProtobufUnittest.CustomOptionOtherValues.classBuilder() as! ProtobufUnittest.CustomOptionOtherValues.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.CustomOptionOtherValues.Builder {
      return classBuilder() as! ProtobufUnittest.CustomOptionOtherValues.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.CustomOptionOtherValues.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.CustomOptionOtherValues.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.CustomOptionOtherValues.Builder {
      return try ProtobufUnittest.CustomOptionOtherValues.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.CustomOptionOtherValues) throws -> ProtobufUnittest.CustomOptionOtherValues.Builder {
      return try ProtobufUnittest.CustomOptionOtherValues.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.CustomOptionOtherValues"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.CustomOptionOtherValues"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.CustomOptionOtherValues.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.CustomOptionOtherValues = ProtobufUnittest.CustomOptionOtherValues()
      internal func getMessage() -> ProtobufUnittest.CustomOptionOtherValues {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.CustomOptionOtherValues.Builder {
        builderResult = ProtobufUnittest.CustomOptionOtherValues()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.CustomOptionOtherValues.Builder {
        return try ProtobufUnittest.CustomOptionOtherValues.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.CustomOptionOtherValues {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.CustomOptionOtherValues {
        let returnMe:ProtobufUnittest.CustomOptionOtherValues = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.CustomOptionOtherValues) throws -> ProtobufUnittest.CustomOptionOtherValues.Builder {
        if other == ProtobufUnittest.CustomOptionOtherValues() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.CustomOptionOtherValues.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.CustomOptionOtherValues.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final internal class SettingRealsFromPositiveInts : GeneratedMessage, GeneratedMessageProtocol {
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.SettingRealsFromPositiveInts> {
      var mergedArray = Array<ProtobufUnittest.SettingRealsFromPositiveInts>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.SettingRealsFromPositiveInts? {
      return try ProtobufUnittest.SettingRealsFromPositiveInts.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.SettingRealsFromPositiveInts {
      return try ProtobufUnittest.SettingRealsFromPositiveInts.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.SettingRealsFromPositiveInts {
      return try ProtobufUnittest.SettingRealsFromPositiveInts.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.SettingRealsFromPositiveInts {
      return try ProtobufUnittest.SettingRealsFromPositiveInts.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.SettingRealsFromPositiveInts {
      return try ProtobufUnittest.SettingRealsFromPositiveInts.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.SettingRealsFromPositiveInts {
      return try ProtobufUnittest.SettingRealsFromPositiveInts.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.SettingRealsFromPositiveInts {
      return try ProtobufUnittest.SettingRealsFromPositiveInts.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.SettingRealsFromPositiveInts.Builder {
      return ProtobufUnittest.SettingRealsFromPositiveInts.classBuilder() as! ProtobufUnittest.SettingRealsFromPositiveInts.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.SettingRealsFromPositiveInts.Builder {
      return classBuilder() as! ProtobufUnittest.SettingRealsFromPositiveInts.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.SettingRealsFromPositiveInts.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.SettingRealsFromPositiveInts.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.SettingRealsFromPositiveInts.Builder {
      return try ProtobufUnittest.SettingRealsFromPositiveInts.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.SettingRealsFromPositiveInts) throws -> ProtobufUnittest.SettingRealsFromPositiveInts.Builder {
      return try ProtobufUnittest.SettingRealsFromPositiveInts.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.SettingRealsFromPositiveInts"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.SettingRealsFromPositiveInts"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.SettingRealsFromPositiveInts.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.SettingRealsFromPositiveInts = ProtobufUnittest.SettingRealsFromPositiveInts()
      internal func getMessage() -> ProtobufUnittest.SettingRealsFromPositiveInts {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.SettingRealsFromPositiveInts.Builder {
        builderResult = ProtobufUnittest.SettingRealsFromPositiveInts()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.SettingRealsFromPositiveInts.Builder {
        return try ProtobufUnittest.SettingRealsFromPositiveInts.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.SettingRealsFromPositiveInts {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.SettingRealsFromPositiveInts {
        let returnMe:ProtobufUnittest.SettingRealsFromPositiveInts = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.SettingRealsFromPositiveInts) throws -> ProtobufUnittest.SettingRealsFromPositiveInts.Builder {
        if other == ProtobufUnittest.SettingRealsFromPositiveInts() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.SettingRealsFromPositiveInts.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.SettingRealsFromPositiveInts.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final internal class SettingRealsFromNegativeInts : GeneratedMessage, GeneratedMessageProtocol {
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.SettingRealsFromNegativeInts> {
      var mergedArray = Array<ProtobufUnittest.SettingRealsFromNegativeInts>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.SettingRealsFromNegativeInts? {
      return try ProtobufUnittest.SettingRealsFromNegativeInts.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.SettingRealsFromNegativeInts {
      return try ProtobufUnittest.SettingRealsFromNegativeInts.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.SettingRealsFromNegativeInts {
      return try ProtobufUnittest.SettingRealsFromNegativeInts.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.SettingRealsFromNegativeInts {
      return try ProtobufUnittest.SettingRealsFromNegativeInts.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.SettingRealsFromNegativeInts {
      return try ProtobufUnittest.SettingRealsFromNegativeInts.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.SettingRealsFromNegativeInts {
      return try ProtobufUnittest.SettingRealsFromNegativeInts.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.SettingRealsFromNegativeInts {
      return try ProtobufUnittest.SettingRealsFromNegativeInts.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.SettingRealsFromNegativeInts.Builder {
      return ProtobufUnittest.SettingRealsFromNegativeInts.classBuilder() as! ProtobufUnittest.SettingRealsFromNegativeInts.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.SettingRealsFromNegativeInts.Builder {
      return classBuilder() as! ProtobufUnittest.SettingRealsFromNegativeInts.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.SettingRealsFromNegativeInts.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.SettingRealsFromNegativeInts.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.SettingRealsFromNegativeInts.Builder {
      return try ProtobufUnittest.SettingRealsFromNegativeInts.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.SettingRealsFromNegativeInts) throws -> ProtobufUnittest.SettingRealsFromNegativeInts.Builder {
      return try ProtobufUnittest.SettingRealsFromNegativeInts.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.SettingRealsFromNegativeInts"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.SettingRealsFromNegativeInts"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.SettingRealsFromNegativeInts.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.SettingRealsFromNegativeInts = ProtobufUnittest.SettingRealsFromNegativeInts()
      internal func getMessage() -> ProtobufUnittest.SettingRealsFromNegativeInts {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.SettingRealsFromNegativeInts.Builder {
        builderResult = ProtobufUnittest.SettingRealsFromNegativeInts()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.SettingRealsFromNegativeInts.Builder {
        return try ProtobufUnittest.SettingRealsFromNegativeInts.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.SettingRealsFromNegativeInts {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.SettingRealsFromNegativeInts {
        let returnMe:ProtobufUnittest.SettingRealsFromNegativeInts = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.SettingRealsFromNegativeInts) throws -> ProtobufUnittest.SettingRealsFromNegativeInts.Builder {
        if other == ProtobufUnittest.SettingRealsFromNegativeInts() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.SettingRealsFromNegativeInts.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.SettingRealsFromNegativeInts.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final internal class ComplexOptionType1 : ExtendableMessage, GeneratedMessageProtocol{
    private(set) var hasFoo:Bool = false
    private(set) var foo:Int32 = Int32(0)

    private(set) var hasFoo2:Bool = false
    private(set) var foo2:Int32 = Int32(0)

    private(set) var hasFoo3:Bool = false
    private(set) var foo3:Int32 = Int32(0)

    private(set) var foo4:Array<Int32> = Array<Int32>()
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
      if !extensionsAreInitialized() {
       return false
      }
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasFoo {
        try output.writeInt32(1, value:foo)
      }
      if hasFoo2 {
        try output.writeInt32(2, value:foo2)
      }
      if hasFoo3 {
        try output.writeInt32(3, value:foo3)
      }
      if !foo4.isEmpty {
        for oneValuefoo4 in foo4 {
          try output.writeInt32(4, value:oneValuefoo4)
        }
      }
      try writeExtensionsToCodedOutputStream(output, startInclusive:Int32(100), endExclusive:Int32(536870912))
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasFoo {
        serialize_size += foo.computeInt32Size(1)
      }
      if hasFoo2 {
        serialize_size += foo2.computeInt32Size(2)
      }
      if hasFoo3 {
        serialize_size += foo3.computeInt32Size(3)
      }
      var dataSizeFoo4:Int32 = 0
      for oneValuefoo4 in foo4 {
          dataSizeFoo4 += oneValuefoo4.computeInt32SizeNoTag()
      }
      serialize_size += dataSizeFoo4
      serialize_size += 1 * Int32(foo4.count)
      serialize_size += extensionsSerializedSize()
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.ComplexOptionType1> {
      var mergedArray = Array<ProtobufUnittest.ComplexOptionType1>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.ComplexOptionType1? {
      return try ProtobufUnittest.ComplexOptionType1.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.ComplexOptionType1 {
      return try ProtobufUnittest.ComplexOptionType1.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType1 {
      return try ProtobufUnittest.ComplexOptionType1.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.ComplexOptionType1 {
      return try ProtobufUnittest.ComplexOptionType1.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType1 {
      return try ProtobufUnittest.ComplexOptionType1.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.ComplexOptionType1 {
      return try ProtobufUnittest.ComplexOptionType1.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType1 {
      return try ProtobufUnittest.ComplexOptionType1.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.ComplexOptionType1.Builder {
      return ProtobufUnittest.ComplexOptionType1.classBuilder() as! ProtobufUnittest.ComplexOptionType1.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.ComplexOptionType1.Builder {
      return classBuilder() as! ProtobufUnittest.ComplexOptionType1.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.ComplexOptionType1.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.ComplexOptionType1.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.ComplexOptionType1.Builder {
      return try ProtobufUnittest.ComplexOptionType1.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.ComplexOptionType1) throws -> ProtobufUnittest.ComplexOptionType1.Builder {
      return try ProtobufUnittest.ComplexOptionType1.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      if hasFoo {
        output += "\(indent) foo: \(foo) \n"
      }
      if hasFoo2 {
        output += "\(indent) foo2: \(foo2) \n"
      }
      if hasFoo3 {
        output += "\(indent) foo3: \(foo3) \n"
      }
      var foo4ElementIndex:Int = 0
      for oneValuefoo4 in foo4  {
          output += "\(indent) foo4[\(foo4ElementIndex)]: \(oneValuefoo4)\n"
          foo4ElementIndex += 1
      }
      output += try getExtensionDescription(Int32(100), endExclusive:Int32(536870912), indent:indent)
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasFoo {
               hashCode = (hashCode &* 31) &+ foo.hashValue
            }
            if hasFoo2 {
               hashCode = (hashCode &* 31) &+ foo2.hashValue
            }
            if hasFoo3 {
               hashCode = (hashCode &* 31) &+ foo3.hashValue
            }
            for oneValuefoo4 in foo4 {
                hashCode = (hashCode &* 31) &+ oneValuefoo4.hashValue
            }
            hashCode = (hashCode &* 31) &+ Int(hashExtensionsFrom(Int32(100), endExclusive:Int32(536870912)))
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.ComplexOptionType1"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.ComplexOptionType1"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.ComplexOptionType1.self
    }
    //Meta information declaration end

    final internal class Builder : ExtendableMessageBuilder {
      private var builderResult:ProtobufUnittest.ComplexOptionType1 = ProtobufUnittest.ComplexOptionType1()
      internal func getMessage() -> ProtobufUnittest.ComplexOptionType1 {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      var hasFoo:Bool {
           get {
                return builderResult.hasFoo
           }
      }
      var foo:Int32 {
           get {
                return builderResult.foo
           }
           set (value) {
               builderResult.hasFoo = true
               builderResult.foo = value
           }
      }
      func setFoo(value:Int32) -> ProtobufUnittest.ComplexOptionType1.Builder {
        self.foo = value
        return self
      }
      internal func clearFoo() -> ProtobufUnittest.ComplexOptionType1.Builder{
           builderResult.hasFoo = false
           builderResult.foo = Int32(0)
           return self
      }
      var hasFoo2:Bool {
           get {
                return builderResult.hasFoo2
           }
      }
      var foo2:Int32 {
           get {
                return builderResult.foo2
           }
           set (value) {
               builderResult.hasFoo2 = true
               builderResult.foo2 = value
           }
      }
      func setFoo2(value:Int32) -> ProtobufUnittest.ComplexOptionType1.Builder {
        self.foo2 = value
        return self
      }
      internal func clearFoo2() -> ProtobufUnittest.ComplexOptionType1.Builder{
           builderResult.hasFoo2 = false
           builderResult.foo2 = Int32(0)
           return self
      }
      var hasFoo3:Bool {
           get {
                return builderResult.hasFoo3
           }
      }
      var foo3:Int32 {
           get {
                return builderResult.foo3
           }
           set (value) {
               builderResult.hasFoo3 = true
               builderResult.foo3 = value
           }
      }
      func setFoo3(value:Int32) -> ProtobufUnittest.ComplexOptionType1.Builder {
        self.foo3 = value
        return self
      }
      internal func clearFoo3() -> ProtobufUnittest.ComplexOptionType1.Builder{
           builderResult.hasFoo3 = false
           builderResult.foo3 = Int32(0)
           return self
      }
      var foo4:Array<Int32> {
           get {
               return builderResult.foo4
           }
           set (array) {
               builderResult.foo4 = array
           }
      }
      func setFoo4(value:Array<Int32>) -> ProtobufUnittest.ComplexOptionType1.Builder {
        self.foo4 = value
        return self
      }
      internal func clearFoo4() -> ProtobufUnittest.ComplexOptionType1.Builder {
         builderResult.foo4.removeAll(keepCapacity: false)
         return self
      }
      override internal var internalGetResult:ExtendableMessage {
           get {
               return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.ComplexOptionType1.Builder {
        builderResult = ProtobufUnittest.ComplexOptionType1()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.ComplexOptionType1.Builder {
        return try ProtobufUnittest.ComplexOptionType1.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.ComplexOptionType1 {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.ComplexOptionType1 {
        let returnMe:ProtobufUnittest.ComplexOptionType1 = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.ComplexOptionType1) throws -> ProtobufUnittest.ComplexOptionType1.Builder {
        if other == ProtobufUnittest.ComplexOptionType1() {
         return self
        }
        if other.hasFoo {
             foo = other.foo
        }
        if other.hasFoo2 {
             foo2 = other.foo2
        }
        if other.hasFoo3 {
             foo3 = other.foo3
        }
        if !other.foo4.isEmpty {
            builderResult.foo4 += other.foo4
        }
        try mergeExtensionFields(other)
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.ComplexOptionType1.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType1.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 8 :
            foo = try input.readInt32()

          case 16 :
            foo2 = try input.readInt32()

          case 24 :
            foo3 = try input.readInt32()

          case 32 :
            foo4 += [try input.readInt32()]

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final internal class ComplexOptionType2 : ExtendableMessage, GeneratedMessageProtocol{


    //Nested type declaration start

      final internal class ComplexOptionType4 : GeneratedMessage, GeneratedMessageProtocol {
        private(set) var hasWaldo:Bool = false
        private(set) var waldo:Int32 = Int32(0)

        internal class func complexOpt4() -> ConcreateExtensionField {
             return ComplexOptionType2ComplexOptionType4complexOpt4
        }
        required internal init() {
             super.init()
        }
        override internal func isInitialized() -> Bool {
         return true
        }
        override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
          if hasWaldo {
            try output.writeInt32(1, value:waldo)
          }
          try unknownFields.writeToCodedOutputStream(output)
        }
        override internal func serializedSize() -> Int32 {
          var serialize_size:Int32 = memoizedSerializedSize
          if serialize_size != -1 {
           return serialize_size
          }

          serialize_size = 0
          if hasWaldo {
            serialize_size += waldo.computeInt32Size(1)
          }
          serialize_size += unknownFields.serializedSize()
          memoizedSerializedSize = serialize_size
          return serialize_size
        }
        internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.ComplexOptionType2.ComplexOptionType4> {
          var mergedArray = Array<ProtobufUnittest.ComplexOptionType2.ComplexOptionType4>()
          while let value = try parseFromDelimitedFromInputStream(input) {
            mergedArray += [value]
          }
          return mergedArray
        }
        internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4? {
          return try ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder().mergeDelimitedFromInputStream(input)?.build()
        }
        internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4 {
          return try ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
        }
        internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4 {
          return try ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
        }
        internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4 {
          return try ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder().mergeFromInputStream(input).build()
        }
        internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4 {
          return try ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
        }
        internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4 {
          return try ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder().mergeFromCodedInputStream(input).build()
        }
        internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4 {
          return try ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
        }
        internal class func getBuilder() -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder {
          return ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.classBuilder() as! ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder
        }
        internal func getBuilder() -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder {
          return classBuilder() as! ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder
        }
        internal override class func classBuilder() -> MessageBuilder {
          return ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder()
        }
        internal override func classBuilder() -> MessageBuilder {
          return ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder()
        }
        internal func toBuilder() throws -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder {
          return try ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.builderWithPrototype(self)
        }
        internal class func builderWithPrototype(prototype:ProtobufUnittest.ComplexOptionType2.ComplexOptionType4) throws -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder {
          return try ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder().mergeFrom(prototype)
        }
        override internal func getDescription(indent:String) throws -> String {
          var output:String = ""
          if hasWaldo {
            output += "\(indent) waldo: \(waldo) \n"
          }
          output += unknownFields.getDescription(indent)
          return output
        }
        override internal var hashValue:Int {
            get {
                var hashCode:Int = 7
                if hasWaldo {
                   hashCode = (hashCode &* 31) &+ waldo.hashValue
                }
                hashCode = (hashCode &* 31) &+  unknownFields.hashValue
                return hashCode
            }
        }


        //Meta information declaration start

        override internal class func className() -> String {
            return "ProtobufUnittest.ComplexOptionType2.ComplexOptionType4"
        }
        override internal func className() -> String {
            return "ProtobufUnittest.ComplexOptionType2.ComplexOptionType4"
        }
        override internal func classMetaType() -> GeneratedMessage.Type {
            return ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.self
        }
        //Meta information declaration end

        final internal class Builder : GeneratedMessageBuilder {
          private var builderResult:ProtobufUnittest.ComplexOptionType2.ComplexOptionType4 = ProtobufUnittest.ComplexOptionType2.ComplexOptionType4()
          internal func getMessage() -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4 {
              return builderResult
          }

          required override internal init () {
             super.init()
          }
          var hasWaldo:Bool {
               get {
                    return builderResult.hasWaldo
               }
          }
          var waldo:Int32 {
               get {
                    return builderResult.waldo
               }
               set (value) {
                   builderResult.hasWaldo = true
                   builderResult.waldo = value
               }
          }
          func setWaldo(value:Int32) -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder {
            self.waldo = value
            return self
          }
          internal func clearWaldo() -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder{
               builderResult.hasWaldo = false
               builderResult.waldo = Int32(0)
               return self
          }
          override internal var internalGetResult:GeneratedMessage {
               get {
                  return builderResult
               }
          }
          internal override func clear() -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder {
            builderResult = ProtobufUnittest.ComplexOptionType2.ComplexOptionType4()
            return self
          }
          internal override func clone() throws -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder {
            return try ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.builderWithPrototype(builderResult)
          }
          internal override func build() throws -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4 {
               try checkInitialized()
               return buildPartial()
          }
          internal func buildPartial() -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4 {
            let returnMe:ProtobufUnittest.ComplexOptionType2.ComplexOptionType4 = builderResult
            return returnMe
          }
          internal func mergeFrom(other:ProtobufUnittest.ComplexOptionType2.ComplexOptionType4) throws -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder {
            if other == ProtobufUnittest.ComplexOptionType2.ComplexOptionType4() {
             return self
            }
            if other.hasWaldo {
                 waldo = other.waldo
            }
            try mergeUnknownFields(other.unknownFields)
            return self
          }
          internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder {
               return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
          }
          internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder {
            let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
            while (true) {
              let protobufTag = try input.readTag()
              switch protobufTag {
              case 0: 
                self.unknownFields = try unknownFieldsBuilder.build()
                return self

              case 8 :
                waldo = try input.readInt32()

              default:
                if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
                   unknownFields = try unknownFieldsBuilder.build()
                   return self
                }
              }
            }
          }
        }

      }

    //Nested type declaration end

    private(set) var hasBar:Bool = false
    private(set) var bar:ProtobufUnittest.ComplexOptionType1!
    private(set) var hasBaz:Bool = false
    private(set) var baz:Int32 = Int32(0)

    private(set) var hasFred:Bool = false
    private(set) var fred:ProtobufUnittest.ComplexOptionType2.ComplexOptionType4!
    private(set) var barney:Array<ProtobufUnittest.ComplexOptionType2.ComplexOptionType4>  = Array<ProtobufUnittest.ComplexOptionType2.ComplexOptionType4>()
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
      if hasBar {
       if !bar.isInitialized() {
         return false
       }
      }
      if !extensionsAreInitialized() {
       return false
      }
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasBar {
        try output.writeMessage(1, value:bar)
      }
      if hasBaz {
        try output.writeInt32(2, value:baz)
      }
      if hasFred {
        try output.writeMessage(3, value:fred)
      }
      for oneElementbarney in barney {
          try output.writeMessage(4, value:oneElementbarney)
      }
      try writeExtensionsToCodedOutputStream(output, startInclusive:Int32(100), endExclusive:Int32(536870912))
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasBar {
          if let varSizebar = bar?.computeMessageSize(1) {
              serialize_size += varSizebar
          }
      }
      if hasBaz {
        serialize_size += baz.computeInt32Size(2)
      }
      if hasFred {
          if let varSizefred = fred?.computeMessageSize(3) {
              serialize_size += varSizefred
          }
      }
      for oneElementbarney in barney {
          serialize_size += oneElementbarney.computeMessageSize(4)
      }
      serialize_size += extensionsSerializedSize()
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.ComplexOptionType2> {
      var mergedArray = Array<ProtobufUnittest.ComplexOptionType2>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.ComplexOptionType2? {
      return try ProtobufUnittest.ComplexOptionType2.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.ComplexOptionType2 {
      return try ProtobufUnittest.ComplexOptionType2.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType2 {
      return try ProtobufUnittest.ComplexOptionType2.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.ComplexOptionType2 {
      return try ProtobufUnittest.ComplexOptionType2.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType2 {
      return try ProtobufUnittest.ComplexOptionType2.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.ComplexOptionType2 {
      return try ProtobufUnittest.ComplexOptionType2.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType2 {
      return try ProtobufUnittest.ComplexOptionType2.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.ComplexOptionType2.Builder {
      return ProtobufUnittest.ComplexOptionType2.classBuilder() as! ProtobufUnittest.ComplexOptionType2.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.ComplexOptionType2.Builder {
      return classBuilder() as! ProtobufUnittest.ComplexOptionType2.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.ComplexOptionType2.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.ComplexOptionType2.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.ComplexOptionType2.Builder {
      return try ProtobufUnittest.ComplexOptionType2.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.ComplexOptionType2) throws -> ProtobufUnittest.ComplexOptionType2.Builder {
      return try ProtobufUnittest.ComplexOptionType2.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      if hasBar {
        output += "\(indent) bar {\n"
        if let outDescBar = bar {
          output += try outDescBar.getDescription("\(indent)  ")
        }
        output += "\(indent) }\n"
      }
      if hasBaz {
        output += "\(indent) baz: \(baz) \n"
      }
      if hasFred {
        output += "\(indent) fred {\n"
        if let outDescFred = fred {
          output += try outDescFred.getDescription("\(indent)  ")
        }
        output += "\(indent) }\n"
      }
      var barneyElementIndex:Int = 0
      for oneElementbarney in barney {
          output += "\(indent) barney[\(barneyElementIndex)] {\n"
          output += try oneElementbarney.getDescription("\(indent)  ")
          output += "\(indent)}\n"
          barneyElementIndex += 1
      }
      output += try getExtensionDescription(Int32(100), endExclusive:Int32(536870912), indent:indent)
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasBar {
                if let hashValuebar = bar?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuebar
                }
            }
            if hasBaz {
               hashCode = (hashCode &* 31) &+ baz.hashValue
            }
            if hasFred {
                if let hashValuefred = fred?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuefred
                }
            }
            for oneElementbarney in barney {
                hashCode = (hashCode &* 31) &+ oneElementbarney.hashValue
            }
            hashCode = (hashCode &* 31) &+ Int(hashExtensionsFrom(Int32(100), endExclusive:Int32(536870912)))
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.ComplexOptionType2"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.ComplexOptionType2"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.ComplexOptionType2.self
    }
    //Meta information declaration end

    final internal class Builder : ExtendableMessageBuilder {
      private var builderResult:ProtobufUnittest.ComplexOptionType2 = ProtobufUnittest.ComplexOptionType2()
      internal func getMessage() -> ProtobufUnittest.ComplexOptionType2 {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      var hasBar:Bool {
           get {
               return builderResult.hasBar
           }
      }
      var bar:ProtobufUnittest.ComplexOptionType1! {
           get {
               if barBuilder_ != nil {
                  builderResult.bar = barBuilder_.getMessage()
               }
               return builderResult.bar
           }
           set (value) {
               builderResult.hasBar = true
               builderResult.bar = value
           }
      }
      private var barBuilder_:ProtobufUnittest.ComplexOptionType1.Builder! {
           didSet {
              builderResult.hasBar = true
           }
      }
      internal func getBarBuilder() -> ProtobufUnittest.ComplexOptionType1.Builder {
        if barBuilder_ == nil {
           barBuilder_ = ProtobufUnittest.ComplexOptionType1.Builder()
           builderResult.bar = barBuilder_.getMessage()
           if bar != nil {
              try! barBuilder_.mergeFrom(bar)
           }
        }
        return barBuilder_
      }
      func setBar(value:ProtobufUnittest.ComplexOptionType1!) -> ProtobufUnittest.ComplexOptionType2.Builder {
        self.bar = value
        return self
      }
      internal func mergeBar(value:ProtobufUnittest.ComplexOptionType1) throws -> ProtobufUnittest.ComplexOptionType2.Builder {
        if builderResult.hasBar {
          builderResult.bar = try ProtobufUnittest.ComplexOptionType1.builderWithPrototype(builderResult.bar).mergeFrom(value).buildPartial()
        } else {
          builderResult.bar = value
        }
        builderResult.hasBar = true
        return self
      }
      internal func clearBar() -> ProtobufUnittest.ComplexOptionType2.Builder {
        barBuilder_ = nil
        builderResult.hasBar = false
        builderResult.bar = nil
        return self
      }
      var hasBaz:Bool {
           get {
                return builderResult.hasBaz
           }
      }
      var baz:Int32 {
           get {
                return builderResult.baz
           }
           set (value) {
               builderResult.hasBaz = true
               builderResult.baz = value
           }
      }
      func setBaz(value:Int32) -> ProtobufUnittest.ComplexOptionType2.Builder {
        self.baz = value
        return self
      }
      internal func clearBaz() -> ProtobufUnittest.ComplexOptionType2.Builder{
           builderResult.hasBaz = false
           builderResult.baz = Int32(0)
           return self
      }
      var hasFred:Bool {
           get {
               return builderResult.hasFred
           }
      }
      var fred:ProtobufUnittest.ComplexOptionType2.ComplexOptionType4! {
           get {
               if fredBuilder_ != nil {
                  builderResult.fred = fredBuilder_.getMessage()
               }
               return builderResult.fred
           }
           set (value) {
               builderResult.hasFred = true
               builderResult.fred = value
           }
      }
      private var fredBuilder_:ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder! {
           didSet {
              builderResult.hasFred = true
           }
      }
      internal func getFredBuilder() -> ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder {
        if fredBuilder_ == nil {
           fredBuilder_ = ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder()
           builderResult.fred = fredBuilder_.getMessage()
           if fred != nil {
              try! fredBuilder_.mergeFrom(fred)
           }
        }
        return fredBuilder_
      }
      func setFred(value:ProtobufUnittest.ComplexOptionType2.ComplexOptionType4!) -> ProtobufUnittest.ComplexOptionType2.Builder {
        self.fred = value
        return self
      }
      internal func mergeFred(value:ProtobufUnittest.ComplexOptionType2.ComplexOptionType4) throws -> ProtobufUnittest.ComplexOptionType2.Builder {
        if builderResult.hasFred {
          builderResult.fred = try ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.builderWithPrototype(builderResult.fred).mergeFrom(value).buildPartial()
        } else {
          builderResult.fred = value
        }
        builderResult.hasFred = true
        return self
      }
      internal func clearFred() -> ProtobufUnittest.ComplexOptionType2.Builder {
        fredBuilder_ = nil
        builderResult.hasFred = false
        builderResult.fred = nil
        return self
      }
      var barney:Array<ProtobufUnittest.ComplexOptionType2.ComplexOptionType4> {
           get {
               return builderResult.barney
           }
           set (value) {
               builderResult.barney = value
           }
      }
      func setBarney(value:Array<ProtobufUnittest.ComplexOptionType2.ComplexOptionType4>) -> ProtobufUnittest.ComplexOptionType2.Builder {
        self.barney = value
        return self
      }
      internal func clearBarney() -> ProtobufUnittest.ComplexOptionType2.Builder {
        builderResult.barney.removeAll(keepCapacity: false)
        return self
      }
      override internal var internalGetResult:ExtendableMessage {
           get {
               return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.ComplexOptionType2.Builder {
        builderResult = ProtobufUnittest.ComplexOptionType2()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.ComplexOptionType2.Builder {
        return try ProtobufUnittest.ComplexOptionType2.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.ComplexOptionType2 {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.ComplexOptionType2 {
        let returnMe:ProtobufUnittest.ComplexOptionType2 = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.ComplexOptionType2) throws -> ProtobufUnittest.ComplexOptionType2.Builder {
        if other == ProtobufUnittest.ComplexOptionType2() {
         return self
        }
        if (other.hasBar) {
            try mergeBar(other.bar)
        }
        if other.hasBaz {
             baz = other.baz
        }
        if (other.hasFred) {
            try mergeFred(other.fred)
        }
        if !other.barney.isEmpty  {
           builderResult.barney += other.barney
        }
        try mergeExtensionFields(other)
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.ComplexOptionType2.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType2.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 10 :
            let subBuilder:ProtobufUnittest.ComplexOptionType1.Builder = ProtobufUnittest.ComplexOptionType1.Builder()
            if hasBar {
              try subBuilder.mergeFrom(bar)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            bar = subBuilder.buildPartial()

          case 16 :
            baz = try input.readInt32()

          case 26 :
            let subBuilder:ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder = ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder()
            if hasFred {
              try subBuilder.mergeFrom(fred)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            fred = subBuilder.buildPartial()

          case 34 :
            let subBuilder = ProtobufUnittest.ComplexOptionType2.ComplexOptionType4.Builder()
            try input.readMessage(subBuilder,extensionRegistry:extensionRegistry)
            barney += [subBuilder.buildPartial()]

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final internal class ComplexOptionType3 : GeneratedMessage, GeneratedMessageProtocol {


    //Nested type declaration start

      final internal class ComplexOptionType5 : GeneratedMessage, GeneratedMessageProtocol {
        private(set) var hasPlugh:Bool = false
        private(set) var plugh:Int32 = Int32(0)

        required internal init() {
             super.init()
        }
        override internal func isInitialized() -> Bool {
         return true
        }
        override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
          if hasPlugh {
            try output.writeInt32(3, value:plugh)
          }
          try unknownFields.writeToCodedOutputStream(output)
        }
        override internal func serializedSize() -> Int32 {
          var serialize_size:Int32 = memoizedSerializedSize
          if serialize_size != -1 {
           return serialize_size
          }

          serialize_size = 0
          if hasPlugh {
            serialize_size += plugh.computeInt32Size(3)
          }
          serialize_size += unknownFields.serializedSize()
          memoizedSerializedSize = serialize_size
          return serialize_size
        }
        internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.ComplexOptionType3.ComplexOptionType5> {
          var mergedArray = Array<ProtobufUnittest.ComplexOptionType3.ComplexOptionType5>()
          while let value = try parseFromDelimitedFromInputStream(input) {
            mergedArray += [value]
          }
          return mergedArray
        }
        internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5? {
          return try ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder().mergeDelimitedFromInputStream(input)?.build()
        }
        internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5 {
          return try ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
        }
        internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5 {
          return try ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
        }
        internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5 {
          return try ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder().mergeFromInputStream(input).build()
        }
        internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5 {
          return try ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
        }
        internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5 {
          return try ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder().mergeFromCodedInputStream(input).build()
        }
        internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5 {
          return try ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
        }
        internal class func getBuilder() -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder {
          return ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.classBuilder() as! ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder
        }
        internal func getBuilder() -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder {
          return classBuilder() as! ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder
        }
        internal override class func classBuilder() -> MessageBuilder {
          return ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder()
        }
        internal override func classBuilder() -> MessageBuilder {
          return ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder()
        }
        internal func toBuilder() throws -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder {
          return try ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.builderWithPrototype(self)
        }
        internal class func builderWithPrototype(prototype:ProtobufUnittest.ComplexOptionType3.ComplexOptionType5) throws -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder {
          return try ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder().mergeFrom(prototype)
        }
        override internal func getDescription(indent:String) throws -> String {
          var output:String = ""
          if hasPlugh {
            output += "\(indent) plugh: \(plugh) \n"
          }
          output += unknownFields.getDescription(indent)
          return output
        }
        override internal var hashValue:Int {
            get {
                var hashCode:Int = 7
                if hasPlugh {
                   hashCode = (hashCode &* 31) &+ plugh.hashValue
                }
                hashCode = (hashCode &* 31) &+  unknownFields.hashValue
                return hashCode
            }
        }


        //Meta information declaration start

        override internal class func className() -> String {
            return "ProtobufUnittest.ComplexOptionType3.ComplexOptionType5"
        }
        override internal func className() -> String {
            return "ProtobufUnittest.ComplexOptionType3.ComplexOptionType5"
        }
        override internal func classMetaType() -> GeneratedMessage.Type {
            return ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.self
        }
        //Meta information declaration end

        final internal class Builder : GeneratedMessageBuilder {
          private var builderResult:ProtobufUnittest.ComplexOptionType3.ComplexOptionType5 = ProtobufUnittest.ComplexOptionType3.ComplexOptionType5()
          internal func getMessage() -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5 {
              return builderResult
          }

          required override internal init () {
             super.init()
          }
          var hasPlugh:Bool {
               get {
                    return builderResult.hasPlugh
               }
          }
          var plugh:Int32 {
               get {
                    return builderResult.plugh
               }
               set (value) {
                   builderResult.hasPlugh = true
                   builderResult.plugh = value
               }
          }
          func setPlugh(value:Int32) -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder {
            self.plugh = value
            return self
          }
          internal func clearPlugh() -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder{
               builderResult.hasPlugh = false
               builderResult.plugh = Int32(0)
               return self
          }
          override internal var internalGetResult:GeneratedMessage {
               get {
                  return builderResult
               }
          }
          internal override func clear() -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder {
            builderResult = ProtobufUnittest.ComplexOptionType3.ComplexOptionType5()
            return self
          }
          internal override func clone() throws -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder {
            return try ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.builderWithPrototype(builderResult)
          }
          internal override func build() throws -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5 {
               try checkInitialized()
               return buildPartial()
          }
          internal func buildPartial() -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5 {
            let returnMe:ProtobufUnittest.ComplexOptionType3.ComplexOptionType5 = builderResult
            return returnMe
          }
          internal func mergeFrom(other:ProtobufUnittest.ComplexOptionType3.ComplexOptionType5) throws -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder {
            if other == ProtobufUnittest.ComplexOptionType3.ComplexOptionType5() {
             return self
            }
            if other.hasPlugh {
                 plugh = other.plugh
            }
            try mergeUnknownFields(other.unknownFields)
            return self
          }
          internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder {
               return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
          }
          internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder {
            let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
            while (true) {
              let protobufTag = try input.readTag()
              switch protobufTag {
              case 0: 
                self.unknownFields = try unknownFieldsBuilder.build()
                return self

              case 24 :
                plugh = try input.readInt32()

              default:
                if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
                   unknownFields = try unknownFieldsBuilder.build()
                   return self
                }
              }
            }
          }
        }

      }

    //Nested type declaration end

    private(set) var hasQux:Bool = false
    private(set) var qux:Int32 = Int32(0)

    private(set) var hasComplexOptionType5:Bool = false
    private(set) var complexOptionType5:ProtobufUnittest.ComplexOptionType3.ComplexOptionType5!
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasQux {
        try output.writeInt32(1, value:qux)
      }
      if hasComplexOptionType5 {
        try output.writeGroup(2, value:complexOptionType5)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasQux {
        serialize_size += qux.computeInt32Size(1)
      }
      if hasComplexOptionType5 {
          if let varSizecomplexOptionType5 = complexOptionType5?.computeGroupSize(2) {
              serialize_size += varSizecomplexOptionType5
          }
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.ComplexOptionType3> {
      var mergedArray = Array<ProtobufUnittest.ComplexOptionType3>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.ComplexOptionType3? {
      return try ProtobufUnittest.ComplexOptionType3.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.ComplexOptionType3 {
      return try ProtobufUnittest.ComplexOptionType3.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType3 {
      return try ProtobufUnittest.ComplexOptionType3.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.ComplexOptionType3 {
      return try ProtobufUnittest.ComplexOptionType3.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType3 {
      return try ProtobufUnittest.ComplexOptionType3.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.ComplexOptionType3 {
      return try ProtobufUnittest.ComplexOptionType3.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType3 {
      return try ProtobufUnittest.ComplexOptionType3.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.ComplexOptionType3.Builder {
      return ProtobufUnittest.ComplexOptionType3.classBuilder() as! ProtobufUnittest.ComplexOptionType3.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.ComplexOptionType3.Builder {
      return classBuilder() as! ProtobufUnittest.ComplexOptionType3.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.ComplexOptionType3.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.ComplexOptionType3.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.ComplexOptionType3.Builder {
      return try ProtobufUnittest.ComplexOptionType3.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.ComplexOptionType3) throws -> ProtobufUnittest.ComplexOptionType3.Builder {
      return try ProtobufUnittest.ComplexOptionType3.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      if hasQux {
        output += "\(indent) qux: \(qux) \n"
      }
      if hasComplexOptionType5 {
        output += "\(indent) complexOptionType5 {\n"
        if let outDescComplexOptionType5 = complexOptionType5 {
          output += try outDescComplexOptionType5.getDescription("\(indent)  ")
        }
        output += "\(indent) }\n"
      }
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasQux {
               hashCode = (hashCode &* 31) &+ qux.hashValue
            }
            if hasComplexOptionType5 {
                if let hashValuecomplexOptionType5 = complexOptionType5?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuecomplexOptionType5
                }
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.ComplexOptionType3"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.ComplexOptionType3"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.ComplexOptionType3.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.ComplexOptionType3 = ProtobufUnittest.ComplexOptionType3()
      internal func getMessage() -> ProtobufUnittest.ComplexOptionType3 {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      var hasQux:Bool {
           get {
                return builderResult.hasQux
           }
      }
      var qux:Int32 {
           get {
                return builderResult.qux
           }
           set (value) {
               builderResult.hasQux = true
               builderResult.qux = value
           }
      }
      func setQux(value:Int32) -> ProtobufUnittest.ComplexOptionType3.Builder {
        self.qux = value
        return self
      }
      internal func clearQux() -> ProtobufUnittest.ComplexOptionType3.Builder{
           builderResult.hasQux = false
           builderResult.qux = Int32(0)
           return self
      }
      var hasComplexOptionType5:Bool {
           get {
               return builderResult.hasComplexOptionType5
           }
      }
      var complexOptionType5:ProtobufUnittest.ComplexOptionType3.ComplexOptionType5! {
           get {
               if complexOptionType5Builder_ != nil {
                  builderResult.complexOptionType5 = complexOptionType5Builder_.getMessage()
               }
               return builderResult.complexOptionType5
           }
           set (value) {
               builderResult.hasComplexOptionType5 = true
               builderResult.complexOptionType5 = value
           }
      }
      private var complexOptionType5Builder_:ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder! {
           didSet {
              builderResult.hasComplexOptionType5 = true
           }
      }
      internal func getComplexOptionType5Builder() -> ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder {
        if complexOptionType5Builder_ == nil {
           complexOptionType5Builder_ = ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder()
           builderResult.complexOptionType5 = complexOptionType5Builder_.getMessage()
           if complexOptionType5 != nil {
              try! complexOptionType5Builder_.mergeFrom(complexOptionType5)
           }
        }
        return complexOptionType5Builder_
      }
      func setComplexOptionType5(value:ProtobufUnittest.ComplexOptionType3.ComplexOptionType5!) -> ProtobufUnittest.ComplexOptionType3.Builder {
        self.complexOptionType5 = value
        return self
      }
      internal func mergeComplexOptionType5(value:ProtobufUnittest.ComplexOptionType3.ComplexOptionType5) throws -> ProtobufUnittest.ComplexOptionType3.Builder {
        if builderResult.hasComplexOptionType5 {
          builderResult.complexOptionType5 = try ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.builderWithPrototype(builderResult.complexOptionType5).mergeFrom(value).buildPartial()
        } else {
          builderResult.complexOptionType5 = value
        }
        builderResult.hasComplexOptionType5 = true
        return self
      }
      internal func clearComplexOptionType5() -> ProtobufUnittest.ComplexOptionType3.Builder {
        complexOptionType5Builder_ = nil
        builderResult.hasComplexOptionType5 = false
        builderResult.complexOptionType5 = nil
        return self
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.ComplexOptionType3.Builder {
        builderResult = ProtobufUnittest.ComplexOptionType3()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.ComplexOptionType3.Builder {
        return try ProtobufUnittest.ComplexOptionType3.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.ComplexOptionType3 {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.ComplexOptionType3 {
        let returnMe:ProtobufUnittest.ComplexOptionType3 = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.ComplexOptionType3) throws -> ProtobufUnittest.ComplexOptionType3.Builder {
        if other == ProtobufUnittest.ComplexOptionType3() {
         return self
        }
        if other.hasQux {
             qux = other.qux
        }
        if (other.hasComplexOptionType5) {
            try mergeComplexOptionType5(other.complexOptionType5)
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.ComplexOptionType3.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOptionType3.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 8 :
            qux = try input.readInt32()

          case 19 :
            let subBuilder:ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder = ProtobufUnittest.ComplexOptionType3.ComplexOptionType5.Builder()
            if hasComplexOptionType5 {
              try subBuilder.mergeFrom(complexOptionType5)
            }
            try input.readGroup(2, builder:subBuilder, extensionRegistry:extensionRegistry)
            complexOptionType5 = subBuilder.buildPartial()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final internal class ComplexOpt6 : GeneratedMessage, GeneratedMessageProtocol {
    private(set) var hasXyzzy:Bool = false
    private(set) var xyzzy:Int32 = Int32(0)

    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasXyzzy {
        try output.writeInt32(7593951, value:xyzzy)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasXyzzy {
        serialize_size += xyzzy.computeInt32Size(7593951)
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.ComplexOpt6> {
      var mergedArray = Array<ProtobufUnittest.ComplexOpt6>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.ComplexOpt6? {
      return try ProtobufUnittest.ComplexOpt6.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.ComplexOpt6 {
      return try ProtobufUnittest.ComplexOpt6.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOpt6 {
      return try ProtobufUnittest.ComplexOpt6.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.ComplexOpt6 {
      return try ProtobufUnittest.ComplexOpt6.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOpt6 {
      return try ProtobufUnittest.ComplexOpt6.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.ComplexOpt6 {
      return try ProtobufUnittest.ComplexOpt6.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOpt6 {
      return try ProtobufUnittest.ComplexOpt6.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.ComplexOpt6.Builder {
      return ProtobufUnittest.ComplexOpt6.classBuilder() as! ProtobufUnittest.ComplexOpt6.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.ComplexOpt6.Builder {
      return classBuilder() as! ProtobufUnittest.ComplexOpt6.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.ComplexOpt6.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.ComplexOpt6.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.ComplexOpt6.Builder {
      return try ProtobufUnittest.ComplexOpt6.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.ComplexOpt6) throws -> ProtobufUnittest.ComplexOpt6.Builder {
      return try ProtobufUnittest.ComplexOpt6.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      if hasXyzzy {
        output += "\(indent) xyzzy: \(xyzzy) \n"
      }
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasXyzzy {
               hashCode = (hashCode &* 31) &+ xyzzy.hashValue
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.ComplexOpt6"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.ComplexOpt6"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.ComplexOpt6.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.ComplexOpt6 = ProtobufUnittest.ComplexOpt6()
      internal func getMessage() -> ProtobufUnittest.ComplexOpt6 {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      var hasXyzzy:Bool {
           get {
                return builderResult.hasXyzzy
           }
      }
      var xyzzy:Int32 {
           get {
                return builderResult.xyzzy
           }
           set (value) {
               builderResult.hasXyzzy = true
               builderResult.xyzzy = value
           }
      }
      func setXyzzy(value:Int32) -> ProtobufUnittest.ComplexOpt6.Builder {
        self.xyzzy = value
        return self
      }
      internal func clearXyzzy() -> ProtobufUnittest.ComplexOpt6.Builder{
           builderResult.hasXyzzy = false
           builderResult.xyzzy = Int32(0)
           return self
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.ComplexOpt6.Builder {
        builderResult = ProtobufUnittest.ComplexOpt6()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.ComplexOpt6.Builder {
        return try ProtobufUnittest.ComplexOpt6.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.ComplexOpt6 {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.ComplexOpt6 {
        let returnMe:ProtobufUnittest.ComplexOpt6 = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.ComplexOpt6) throws -> ProtobufUnittest.ComplexOpt6.Builder {
        if other == ProtobufUnittest.ComplexOpt6() {
         return self
        }
        if other.hasXyzzy {
             xyzzy = other.xyzzy
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.ComplexOpt6.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.ComplexOpt6.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 60751608 :
            xyzzy = try input.readInt32()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  // Note that we try various different ways of naming the same extension.
  final internal class VariousComplexOptions : GeneratedMessage, GeneratedMessageProtocol {
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.VariousComplexOptions> {
      var mergedArray = Array<ProtobufUnittest.VariousComplexOptions>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.VariousComplexOptions? {
      return try ProtobufUnittest.VariousComplexOptions.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.VariousComplexOptions {
      return try ProtobufUnittest.VariousComplexOptions.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.VariousComplexOptions {
      return try ProtobufUnittest.VariousComplexOptions.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.VariousComplexOptions {
      return try ProtobufUnittest.VariousComplexOptions.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.VariousComplexOptions {
      return try ProtobufUnittest.VariousComplexOptions.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.VariousComplexOptions {
      return try ProtobufUnittest.VariousComplexOptions.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.VariousComplexOptions {
      return try ProtobufUnittest.VariousComplexOptions.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.VariousComplexOptions.Builder {
      return ProtobufUnittest.VariousComplexOptions.classBuilder() as! ProtobufUnittest.VariousComplexOptions.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.VariousComplexOptions.Builder {
      return classBuilder() as! ProtobufUnittest.VariousComplexOptions.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.VariousComplexOptions.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.VariousComplexOptions.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.VariousComplexOptions.Builder {
      return try ProtobufUnittest.VariousComplexOptions.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.VariousComplexOptions) throws -> ProtobufUnittest.VariousComplexOptions.Builder {
      return try ProtobufUnittest.VariousComplexOptions.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.VariousComplexOptions"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.VariousComplexOptions"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.VariousComplexOptions.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.VariousComplexOptions = ProtobufUnittest.VariousComplexOptions()
      internal func getMessage() -> ProtobufUnittest.VariousComplexOptions {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.VariousComplexOptions.Builder {
        builderResult = ProtobufUnittest.VariousComplexOptions()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.VariousComplexOptions.Builder {
        return try ProtobufUnittest.VariousComplexOptions.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.VariousComplexOptions {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.VariousComplexOptions {
        let returnMe:ProtobufUnittest.VariousComplexOptions = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.VariousComplexOptions) throws -> ProtobufUnittest.VariousComplexOptions.Builder {
        if other == ProtobufUnittest.VariousComplexOptions() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.VariousComplexOptions.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.VariousComplexOptions.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final internal class AggregateMessageSet : ExtendableMessage, GeneratedMessageProtocol{
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
      if !extensionsAreInitialized() {
       return false
      }
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try writeExtensionsToCodedOutputStream(output, startInclusive:Int32(4), endExclusive:Int32(2147483647))
      try unknownFields.writeAsMessageSetTo(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += extensionsSerializedSize()
      serialize_size += unknownFields.serializedSizeAsMessageSet()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.AggregateMessageSet> {
      var mergedArray = Array<ProtobufUnittest.AggregateMessageSet>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.AggregateMessageSet? {
      return try ProtobufUnittest.AggregateMessageSet.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.AggregateMessageSet {
      return try ProtobufUnittest.AggregateMessageSet.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.AggregateMessageSet {
      return try ProtobufUnittest.AggregateMessageSet.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.AggregateMessageSet {
      return try ProtobufUnittest.AggregateMessageSet.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.AggregateMessageSet {
      return try ProtobufUnittest.AggregateMessageSet.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.AggregateMessageSet {
      return try ProtobufUnittest.AggregateMessageSet.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.AggregateMessageSet {
      return try ProtobufUnittest.AggregateMessageSet.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.AggregateMessageSet.Builder {
      return ProtobufUnittest.AggregateMessageSet.classBuilder() as! ProtobufUnittest.AggregateMessageSet.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.AggregateMessageSet.Builder {
      return classBuilder() as! ProtobufUnittest.AggregateMessageSet.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.AggregateMessageSet.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.AggregateMessageSet.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.AggregateMessageSet.Builder {
      return try ProtobufUnittest.AggregateMessageSet.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.AggregateMessageSet) throws -> ProtobufUnittest.AggregateMessageSet.Builder {
      return try ProtobufUnittest.AggregateMessageSet.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      output += try getExtensionDescription(Int32(4), endExclusive:Int32(2147483647), indent:indent)
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+ Int(hashExtensionsFrom(Int32(4), endExclusive:Int32(2147483647)))
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.AggregateMessageSet"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.AggregateMessageSet"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.AggregateMessageSet.self
    }
    //Meta information declaration end

    final internal class Builder : ExtendableMessageBuilder {
      private var builderResult:ProtobufUnittest.AggregateMessageSet = ProtobufUnittest.AggregateMessageSet()
      internal func getMessage() -> ProtobufUnittest.AggregateMessageSet {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      override internal var internalGetResult:ExtendableMessage {
           get {
               return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.AggregateMessageSet.Builder {
        builderResult = ProtobufUnittest.AggregateMessageSet()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.AggregateMessageSet.Builder {
        return try ProtobufUnittest.AggregateMessageSet.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.AggregateMessageSet {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.AggregateMessageSet {
        let returnMe:ProtobufUnittest.AggregateMessageSet = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.AggregateMessageSet) throws -> ProtobufUnittest.AggregateMessageSet.Builder {
        if other == ProtobufUnittest.AggregateMessageSet() {
         return self
        }
        try mergeExtensionFields(other)
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.AggregateMessageSet.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.AggregateMessageSet.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final internal class AggregateMessageSetElement : GeneratedMessage, GeneratedMessageProtocol {
    private(set) var hasS:Bool = false
    private(set) var s:String = ""

    internal class func messageSetExtension() -> ConcreateExtensionField {
         return AggregateMessageSetElementmessageSetExtension
    }
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasS {
        try output.writeString(1, value:s)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasS {
        serialize_size += s.computeStringSize(1)
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.AggregateMessageSetElement> {
      var mergedArray = Array<ProtobufUnittest.AggregateMessageSetElement>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.AggregateMessageSetElement? {
      return try ProtobufUnittest.AggregateMessageSetElement.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.AggregateMessageSetElement {
      return try ProtobufUnittest.AggregateMessageSetElement.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.AggregateMessageSetElement {
      return try ProtobufUnittest.AggregateMessageSetElement.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.AggregateMessageSetElement {
      return try ProtobufUnittest.AggregateMessageSetElement.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.AggregateMessageSetElement {
      return try ProtobufUnittest.AggregateMessageSetElement.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.AggregateMessageSetElement {
      return try ProtobufUnittest.AggregateMessageSetElement.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.AggregateMessageSetElement {
      return try ProtobufUnittest.AggregateMessageSetElement.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.AggregateMessageSetElement.Builder {
      return ProtobufUnittest.AggregateMessageSetElement.classBuilder() as! ProtobufUnittest.AggregateMessageSetElement.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.AggregateMessageSetElement.Builder {
      return classBuilder() as! ProtobufUnittest.AggregateMessageSetElement.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.AggregateMessageSetElement.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.AggregateMessageSetElement.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.AggregateMessageSetElement.Builder {
      return try ProtobufUnittest.AggregateMessageSetElement.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.AggregateMessageSetElement) throws -> ProtobufUnittest.AggregateMessageSetElement.Builder {
      return try ProtobufUnittest.AggregateMessageSetElement.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      if hasS {
        output += "\(indent) s: \(s) \n"
      }
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasS {
               hashCode = (hashCode &* 31) &+ s.hashValue
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.AggregateMessageSetElement"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.AggregateMessageSetElement"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.AggregateMessageSetElement.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.AggregateMessageSetElement = ProtobufUnittest.AggregateMessageSetElement()
      internal func getMessage() -> ProtobufUnittest.AggregateMessageSetElement {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      var hasS:Bool {
           get {
                return builderResult.hasS
           }
      }
      var s:String {
           get {
                return builderResult.s
           }
           set (value) {
               builderResult.hasS = true
               builderResult.s = value
           }
      }
      func setS(value:String) -> ProtobufUnittest.AggregateMessageSetElement.Builder {
        self.s = value
        return self
      }
      internal func clearS() -> ProtobufUnittest.AggregateMessageSetElement.Builder{
           builderResult.hasS = false
           builderResult.s = ""
           return self
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.AggregateMessageSetElement.Builder {
        builderResult = ProtobufUnittest.AggregateMessageSetElement()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.AggregateMessageSetElement.Builder {
        return try ProtobufUnittest.AggregateMessageSetElement.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.AggregateMessageSetElement {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.AggregateMessageSetElement {
        let returnMe:ProtobufUnittest.AggregateMessageSetElement = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.AggregateMessageSetElement) throws -> ProtobufUnittest.AggregateMessageSetElement.Builder {
        if other == ProtobufUnittest.AggregateMessageSetElement() {
         return self
        }
        if other.hasS {
             s = other.s
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.AggregateMessageSetElement.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.AggregateMessageSetElement.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 10 :
            s = try input.readString()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  // A helper type used to test aggregate option parsing
  final internal class Aggregate : GeneratedMessage, GeneratedMessageProtocol {
    private(set) var hasI:Bool = false
    private(set) var i:Int32 = Int32(0)

    private(set) var hasS:Bool = false
    private(set) var s:String = ""

    private(set) var hasSub:Bool = false
    private(set) var sub:ProtobufUnittest.Aggregate!
    private(set) var hasFile:Bool = false
    private(set) var file:Google.Protobuf.FileOptions!
    private(set) var hasMset:Bool = false
    private(set) var mset:ProtobufUnittest.AggregateMessageSet!
    internal class func nested() -> ConcreateExtensionField {
         return Aggregatenested
    }
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
      if hasSub {
       if !sub.isInitialized() {
         return false
       }
      }
      if hasFile {
       if !file.isInitialized() {
         return false
       }
      }
      if hasMset {
       if !mset.isInitialized() {
         return false
       }
      }
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasI {
        try output.writeInt32(1, value:i)
      }
      if hasS {
        try output.writeString(2, value:s)
      }
      if hasSub {
        try output.writeMessage(3, value:sub)
      }
      if hasFile {
        try output.writeMessage(4, value:file)
      }
      if hasMset {
        try output.writeMessage(5, value:mset)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasI {
        serialize_size += i.computeInt32Size(1)
      }
      if hasS {
        serialize_size += s.computeStringSize(2)
      }
      if hasSub {
          if let varSizesub = sub?.computeMessageSize(3) {
              serialize_size += varSizesub
          }
      }
      if hasFile {
          if let varSizefile = file?.computeMessageSize(4) {
              serialize_size += varSizefile
          }
      }
      if hasMset {
          if let varSizemset = mset?.computeMessageSize(5) {
              serialize_size += varSizemset
          }
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.Aggregate> {
      var mergedArray = Array<ProtobufUnittest.Aggregate>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.Aggregate? {
      return try ProtobufUnittest.Aggregate.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.Aggregate {
      return try ProtobufUnittest.Aggregate.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.Aggregate {
      return try ProtobufUnittest.Aggregate.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.Aggregate {
      return try ProtobufUnittest.Aggregate.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.Aggregate {
      return try ProtobufUnittest.Aggregate.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.Aggregate {
      return try ProtobufUnittest.Aggregate.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.Aggregate {
      return try ProtobufUnittest.Aggregate.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.Aggregate.Builder {
      return ProtobufUnittest.Aggregate.classBuilder() as! ProtobufUnittest.Aggregate.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.Aggregate.Builder {
      return classBuilder() as! ProtobufUnittest.Aggregate.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.Aggregate.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.Aggregate.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.Aggregate.Builder {
      return try ProtobufUnittest.Aggregate.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.Aggregate) throws -> ProtobufUnittest.Aggregate.Builder {
      return try ProtobufUnittest.Aggregate.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      if hasI {
        output += "\(indent) i: \(i) \n"
      }
      if hasS {
        output += "\(indent) s: \(s) \n"
      }
      if hasSub {
        output += "\(indent) sub {\n"
        if let outDescSub = sub {
          output += try outDescSub.getDescription("\(indent)  ")
        }
        output += "\(indent) }\n"
      }
      if hasFile {
        output += "\(indent) file {\n"
        if let outDescFile = file {
          output += try outDescFile.getDescription("\(indent)  ")
        }
        output += "\(indent) }\n"
      }
      if hasMset {
        output += "\(indent) mset {\n"
        if let outDescMset = mset {
          output += try outDescMset.getDescription("\(indent)  ")
        }
        output += "\(indent) }\n"
      }
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasI {
               hashCode = (hashCode &* 31) &+ i.hashValue
            }
            if hasS {
               hashCode = (hashCode &* 31) &+ s.hashValue
            }
            if hasSub {
                if let hashValuesub = sub?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuesub
                }
            }
            if hasFile {
                if let hashValuefile = file?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuefile
                }
            }
            if hasMset {
                if let hashValuemset = mset?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuemset
                }
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.Aggregate"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.Aggregate"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.Aggregate.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.Aggregate = ProtobufUnittest.Aggregate()
      internal func getMessage() -> ProtobufUnittest.Aggregate {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      var hasI:Bool {
           get {
                return builderResult.hasI
           }
      }
      var i:Int32 {
           get {
                return builderResult.i
           }
           set (value) {
               builderResult.hasI = true
               builderResult.i = value
           }
      }
      func setI(value:Int32) -> ProtobufUnittest.Aggregate.Builder {
        self.i = value
        return self
      }
      internal func clearI() -> ProtobufUnittest.Aggregate.Builder{
           builderResult.hasI = false
           builderResult.i = Int32(0)
           return self
      }
      var hasS:Bool {
           get {
                return builderResult.hasS
           }
      }
      var s:String {
           get {
                return builderResult.s
           }
           set (value) {
               builderResult.hasS = true
               builderResult.s = value
           }
      }
      func setS(value:String) -> ProtobufUnittest.Aggregate.Builder {
        self.s = value
        return self
      }
      internal func clearS() -> ProtobufUnittest.Aggregate.Builder{
           builderResult.hasS = false
           builderResult.s = ""
           return self
      }
      var hasSub:Bool {
           get {
               return builderResult.hasSub
           }
      }
      var sub:ProtobufUnittest.Aggregate! {
           get {
               if subBuilder_ != nil {
                  builderResult.sub = subBuilder_.getMessage()
               }
               return builderResult.sub
           }
           set (value) {
               builderResult.hasSub = true
               builderResult.sub = value
           }
      }
      private var subBuilder_:ProtobufUnittest.Aggregate.Builder! {
           didSet {
              builderResult.hasSub = true
           }
      }
      internal func getSubBuilder() -> ProtobufUnittest.Aggregate.Builder {
        if subBuilder_ == nil {
           subBuilder_ = ProtobufUnittest.Aggregate.Builder()
           builderResult.sub = subBuilder_.getMessage()
           if sub != nil {
              try! subBuilder_.mergeFrom(sub)
           }
        }
        return subBuilder_
      }
      func setSub(value:ProtobufUnittest.Aggregate!) -> ProtobufUnittest.Aggregate.Builder {
        self.sub = value
        return self
      }
      internal func mergeSub(value:ProtobufUnittest.Aggregate) throws -> ProtobufUnittest.Aggregate.Builder {
        if builderResult.hasSub {
          builderResult.sub = try ProtobufUnittest.Aggregate.builderWithPrototype(builderResult.sub).mergeFrom(value).buildPartial()
        } else {
          builderResult.sub = value
        }
        builderResult.hasSub = true
        return self
      }
      internal func clearSub() -> ProtobufUnittest.Aggregate.Builder {
        subBuilder_ = nil
        builderResult.hasSub = false
        builderResult.sub = nil
        return self
      }
      var hasFile:Bool {
           get {
               return builderResult.hasFile
           }
      }
      var file:Google.Protobuf.FileOptions! {
           get {
               if fileBuilder_ != nil {
                  builderResult.file = fileBuilder_.getMessage()
               }
               return builderResult.file
           }
           set (value) {
               builderResult.hasFile = true
               builderResult.file = value
           }
      }
      private var fileBuilder_:Google.Protobuf.FileOptions.Builder! {
           didSet {
              builderResult.hasFile = true
           }
      }
      internal func getFileBuilder() -> Google.Protobuf.FileOptions.Builder {
        if fileBuilder_ == nil {
           fileBuilder_ = Google.Protobuf.FileOptions.Builder()
           builderResult.file = fileBuilder_.getMessage()
           if file != nil {
              try! fileBuilder_.mergeFrom(file)
           }
        }
        return fileBuilder_
      }
      func setFile(value:Google.Protobuf.FileOptions!) -> ProtobufUnittest.Aggregate.Builder {
        self.file = value
        return self
      }
      internal func mergeFile(value:Google.Protobuf.FileOptions) throws -> ProtobufUnittest.Aggregate.Builder {
        if builderResult.hasFile {
          builderResult.file = try Google.Protobuf.FileOptions.builderWithPrototype(builderResult.file).mergeFrom(value).buildPartial()
        } else {
          builderResult.file = value
        }
        builderResult.hasFile = true
        return self
      }
      internal func clearFile() -> ProtobufUnittest.Aggregate.Builder {
        fileBuilder_ = nil
        builderResult.hasFile = false
        builderResult.file = nil
        return self
      }
      var hasMset:Bool {
           get {
               return builderResult.hasMset
           }
      }
      var mset:ProtobufUnittest.AggregateMessageSet! {
           get {
               if msetBuilder_ != nil {
                  builderResult.mset = msetBuilder_.getMessage()
               }
               return builderResult.mset
           }
           set (value) {
               builderResult.hasMset = true
               builderResult.mset = value
           }
      }
      private var msetBuilder_:ProtobufUnittest.AggregateMessageSet.Builder! {
           didSet {
              builderResult.hasMset = true
           }
      }
      internal func getMsetBuilder() -> ProtobufUnittest.AggregateMessageSet.Builder {
        if msetBuilder_ == nil {
           msetBuilder_ = ProtobufUnittest.AggregateMessageSet.Builder()
           builderResult.mset = msetBuilder_.getMessage()
           if mset != nil {
              try! msetBuilder_.mergeFrom(mset)
           }
        }
        return msetBuilder_
      }
      func setMset(value:ProtobufUnittest.AggregateMessageSet!) -> ProtobufUnittest.Aggregate.Builder {
        self.mset = value
        return self
      }
      internal func mergeMset(value:ProtobufUnittest.AggregateMessageSet) throws -> ProtobufUnittest.Aggregate.Builder {
        if builderResult.hasMset {
          builderResult.mset = try ProtobufUnittest.AggregateMessageSet.builderWithPrototype(builderResult.mset).mergeFrom(value).buildPartial()
        } else {
          builderResult.mset = value
        }
        builderResult.hasMset = true
        return self
      }
      internal func clearMset() -> ProtobufUnittest.Aggregate.Builder {
        msetBuilder_ = nil
        builderResult.hasMset = false
        builderResult.mset = nil
        return self
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.Aggregate.Builder {
        builderResult = ProtobufUnittest.Aggregate()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.Aggregate.Builder {
        return try ProtobufUnittest.Aggregate.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.Aggregate {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.Aggregate {
        let returnMe:ProtobufUnittest.Aggregate = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.Aggregate) throws -> ProtobufUnittest.Aggregate.Builder {
        if other == ProtobufUnittest.Aggregate() {
         return self
        }
        if other.hasI {
             i = other.i
        }
        if other.hasS {
             s = other.s
        }
        if (other.hasSub) {
            try mergeSub(other.sub)
        }
        if (other.hasFile) {
            try mergeFile(other.file)
        }
        if (other.hasMset) {
            try mergeMset(other.mset)
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.Aggregate.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.Aggregate.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 8 :
            i = try input.readInt32()

          case 18 :
            s = try input.readString()

          case 26 :
            let subBuilder:ProtobufUnittest.Aggregate.Builder = ProtobufUnittest.Aggregate.Builder()
            if hasSub {
              try subBuilder.mergeFrom(sub)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            sub = subBuilder.buildPartial()

          case 34 :
            let subBuilder:Google.Protobuf.FileOptions.Builder = Google.Protobuf.FileOptions.Builder()
            if hasFile {
              try subBuilder.mergeFrom(file)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            file = subBuilder.buildPartial()

          case 42 :
            let subBuilder:ProtobufUnittest.AggregateMessageSet.Builder = ProtobufUnittest.AggregateMessageSet.Builder()
            if hasMset {
              try subBuilder.mergeFrom(mset)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            mset = subBuilder.buildPartial()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final internal class AggregateMessage : GeneratedMessage, GeneratedMessageProtocol {
    private(set) var hasFieldname:Bool = false
    private(set) var fieldname:Int32 = Int32(0)

    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasFieldname {
        try output.writeInt32(1, value:fieldname)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasFieldname {
        serialize_size += fieldname.computeInt32Size(1)
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.AggregateMessage> {
      var mergedArray = Array<ProtobufUnittest.AggregateMessage>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.AggregateMessage? {
      return try ProtobufUnittest.AggregateMessage.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.AggregateMessage {
      return try ProtobufUnittest.AggregateMessage.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.AggregateMessage {
      return try ProtobufUnittest.AggregateMessage.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.AggregateMessage {
      return try ProtobufUnittest.AggregateMessage.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.AggregateMessage {
      return try ProtobufUnittest.AggregateMessage.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.AggregateMessage {
      return try ProtobufUnittest.AggregateMessage.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.AggregateMessage {
      return try ProtobufUnittest.AggregateMessage.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.AggregateMessage.Builder {
      return ProtobufUnittest.AggregateMessage.classBuilder() as! ProtobufUnittest.AggregateMessage.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.AggregateMessage.Builder {
      return classBuilder() as! ProtobufUnittest.AggregateMessage.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.AggregateMessage.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.AggregateMessage.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.AggregateMessage.Builder {
      return try ProtobufUnittest.AggregateMessage.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.AggregateMessage) throws -> ProtobufUnittest.AggregateMessage.Builder {
      return try ProtobufUnittest.AggregateMessage.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      if hasFieldname {
        output += "\(indent) fieldname: \(fieldname) \n"
      }
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasFieldname {
               hashCode = (hashCode &* 31) &+ fieldname.hashValue
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.AggregateMessage"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.AggregateMessage"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.AggregateMessage.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.AggregateMessage = ProtobufUnittest.AggregateMessage()
      internal func getMessage() -> ProtobufUnittest.AggregateMessage {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      var hasFieldname:Bool {
           get {
                return builderResult.hasFieldname
           }
      }
      var fieldname:Int32 {
           get {
                return builderResult.fieldname
           }
           set (value) {
               builderResult.hasFieldname = true
               builderResult.fieldname = value
           }
      }
      func setFieldname(value:Int32) -> ProtobufUnittest.AggregateMessage.Builder {
        self.fieldname = value
        return self
      }
      internal func clearFieldname() -> ProtobufUnittest.AggregateMessage.Builder{
           builderResult.hasFieldname = false
           builderResult.fieldname = Int32(0)
           return self
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.AggregateMessage.Builder {
        builderResult = ProtobufUnittest.AggregateMessage()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.AggregateMessage.Builder {
        return try ProtobufUnittest.AggregateMessage.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.AggregateMessage {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.AggregateMessage {
        let returnMe:ProtobufUnittest.AggregateMessage = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.AggregateMessage) throws -> ProtobufUnittest.AggregateMessage.Builder {
        if other == ProtobufUnittest.AggregateMessage() {
         return self
        }
        if other.hasFieldname {
             fieldname = other.fieldname
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.AggregateMessage.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.AggregateMessage.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 8 :
            fieldname = try input.readInt32()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  // Test custom options for nested type.
  final internal class NestedOptionType : GeneratedMessage, GeneratedMessageProtocol {


    //Nested type declaration start

      final internal class NestedMessage : GeneratedMessage, GeneratedMessageProtocol {
        private(set) var hasNestedField:Bool = false
        private(set) var nestedField:Int32 = Int32(0)

        required internal init() {
             super.init()
        }
        override internal func isInitialized() -> Bool {
         return true
        }
        override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
          if hasNestedField {
            try output.writeInt32(1, value:nestedField)
          }
          try unknownFields.writeToCodedOutputStream(output)
        }
        override internal func serializedSize() -> Int32 {
          var serialize_size:Int32 = memoizedSerializedSize
          if serialize_size != -1 {
           return serialize_size
          }

          serialize_size = 0
          if hasNestedField {
            serialize_size += nestedField.computeInt32Size(1)
          }
          serialize_size += unknownFields.serializedSize()
          memoizedSerializedSize = serialize_size
          return serialize_size
        }
        internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.NestedOptionType.NestedMessage> {
          var mergedArray = Array<ProtobufUnittest.NestedOptionType.NestedMessage>()
          while let value = try parseFromDelimitedFromInputStream(input) {
            mergedArray += [value]
          }
          return mergedArray
        }
        internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.NestedOptionType.NestedMessage? {
          return try ProtobufUnittest.NestedOptionType.NestedMessage.Builder().mergeDelimitedFromInputStream(input)?.build()
        }
        internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.NestedOptionType.NestedMessage {
          return try ProtobufUnittest.NestedOptionType.NestedMessage.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
        }
        internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.NestedOptionType.NestedMessage {
          return try ProtobufUnittest.NestedOptionType.NestedMessage.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
        }
        internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.NestedOptionType.NestedMessage {
          return try ProtobufUnittest.NestedOptionType.NestedMessage.Builder().mergeFromInputStream(input).build()
        }
        internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.NestedOptionType.NestedMessage {
          return try ProtobufUnittest.NestedOptionType.NestedMessage.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
        }
        internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.NestedOptionType.NestedMessage {
          return try ProtobufUnittest.NestedOptionType.NestedMessage.Builder().mergeFromCodedInputStream(input).build()
        }
        internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.NestedOptionType.NestedMessage {
          return try ProtobufUnittest.NestedOptionType.NestedMessage.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
        }
        internal class func getBuilder() -> ProtobufUnittest.NestedOptionType.NestedMessage.Builder {
          return ProtobufUnittest.NestedOptionType.NestedMessage.classBuilder() as! ProtobufUnittest.NestedOptionType.NestedMessage.Builder
        }
        internal func getBuilder() -> ProtobufUnittest.NestedOptionType.NestedMessage.Builder {
          return classBuilder() as! ProtobufUnittest.NestedOptionType.NestedMessage.Builder
        }
        internal override class func classBuilder() -> MessageBuilder {
          return ProtobufUnittest.NestedOptionType.NestedMessage.Builder()
        }
        internal override func classBuilder() -> MessageBuilder {
          return ProtobufUnittest.NestedOptionType.NestedMessage.Builder()
        }
        internal func toBuilder() throws -> ProtobufUnittest.NestedOptionType.NestedMessage.Builder {
          return try ProtobufUnittest.NestedOptionType.NestedMessage.builderWithPrototype(self)
        }
        internal class func builderWithPrototype(prototype:ProtobufUnittest.NestedOptionType.NestedMessage) throws -> ProtobufUnittest.NestedOptionType.NestedMessage.Builder {
          return try ProtobufUnittest.NestedOptionType.NestedMessage.Builder().mergeFrom(prototype)
        }
        override internal func getDescription(indent:String) throws -> String {
          var output:String = ""
          if hasNestedField {
            output += "\(indent) nestedField: \(nestedField) \n"
          }
          output += unknownFields.getDescription(indent)
          return output
        }
        override internal var hashValue:Int {
            get {
                var hashCode:Int = 7
                if hasNestedField {
                   hashCode = (hashCode &* 31) &+ nestedField.hashValue
                }
                hashCode = (hashCode &* 31) &+  unknownFields.hashValue
                return hashCode
            }
        }


        //Meta information declaration start

        override internal class func className() -> String {
            return "ProtobufUnittest.NestedOptionType.NestedMessage"
        }
        override internal func className() -> String {
            return "ProtobufUnittest.NestedOptionType.NestedMessage"
        }
        override internal func classMetaType() -> GeneratedMessage.Type {
            return ProtobufUnittest.NestedOptionType.NestedMessage.self
        }
        //Meta information declaration end

        final internal class Builder : GeneratedMessageBuilder {
          private var builderResult:ProtobufUnittest.NestedOptionType.NestedMessage = ProtobufUnittest.NestedOptionType.NestedMessage()
          internal func getMessage() -> ProtobufUnittest.NestedOptionType.NestedMessage {
              return builderResult
          }

          required override internal init () {
             super.init()
          }
          var hasNestedField:Bool {
               get {
                    return builderResult.hasNestedField
               }
          }
          var nestedField:Int32 {
               get {
                    return builderResult.nestedField
               }
               set (value) {
                   builderResult.hasNestedField = true
                   builderResult.nestedField = value
               }
          }
          func setNestedField(value:Int32) -> ProtobufUnittest.NestedOptionType.NestedMessage.Builder {
            self.nestedField = value
            return self
          }
          internal func clearNestedField() -> ProtobufUnittest.NestedOptionType.NestedMessage.Builder{
               builderResult.hasNestedField = false
               builderResult.nestedField = Int32(0)
               return self
          }
          override internal var internalGetResult:GeneratedMessage {
               get {
                  return builderResult
               }
          }
          internal override func clear() -> ProtobufUnittest.NestedOptionType.NestedMessage.Builder {
            builderResult = ProtobufUnittest.NestedOptionType.NestedMessage()
            return self
          }
          internal override func clone() throws -> ProtobufUnittest.NestedOptionType.NestedMessage.Builder {
            return try ProtobufUnittest.NestedOptionType.NestedMessage.builderWithPrototype(builderResult)
          }
          internal override func build() throws -> ProtobufUnittest.NestedOptionType.NestedMessage {
               try checkInitialized()
               return buildPartial()
          }
          internal func buildPartial() -> ProtobufUnittest.NestedOptionType.NestedMessage {
            let returnMe:ProtobufUnittest.NestedOptionType.NestedMessage = builderResult
            return returnMe
          }
          internal func mergeFrom(other:ProtobufUnittest.NestedOptionType.NestedMessage) throws -> ProtobufUnittest.NestedOptionType.NestedMessage.Builder {
            if other == ProtobufUnittest.NestedOptionType.NestedMessage() {
             return self
            }
            if other.hasNestedField {
                 nestedField = other.nestedField
            }
            try mergeUnknownFields(other.unknownFields)
            return self
          }
          internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.NestedOptionType.NestedMessage.Builder {
               return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
          }
          internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.NestedOptionType.NestedMessage.Builder {
            let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
            while (true) {
              let protobufTag = try input.readTag()
              switch protobufTag {
              case 0: 
                self.unknownFields = try unknownFieldsBuilder.build()
                return self

              case 8 :
                nestedField = try input.readInt32()

              default:
                if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
                   unknownFields = try unknownFieldsBuilder.build()
                   return self
                }
              }
            }
          }
        }

      }

    //Nested type declaration end



      //Enum type declaration start 

      internal enum NestedEnum:Int32 {
        case NestedEnumValue = 1

      }

      //Enum type declaration end 

    internal class func nestedExtension() -> ConcreateExtensionField {
         return NestedOptionTypenestedExtension
    }
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.NestedOptionType> {
      var mergedArray = Array<ProtobufUnittest.NestedOptionType>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.NestedOptionType? {
      return try ProtobufUnittest.NestedOptionType.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.NestedOptionType {
      return try ProtobufUnittest.NestedOptionType.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestCustomOptionsRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.NestedOptionType {
      return try ProtobufUnittest.NestedOptionType.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.NestedOptionType {
      return try ProtobufUnittest.NestedOptionType.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.NestedOptionType {
      return try ProtobufUnittest.NestedOptionType.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.NestedOptionType {
      return try ProtobufUnittest.NestedOptionType.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.NestedOptionType {
      return try ProtobufUnittest.NestedOptionType.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.NestedOptionType.Builder {
      return ProtobufUnittest.NestedOptionType.classBuilder() as! ProtobufUnittest.NestedOptionType.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.NestedOptionType.Builder {
      return classBuilder() as! ProtobufUnittest.NestedOptionType.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.NestedOptionType.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.NestedOptionType.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.NestedOptionType.Builder {
      return try ProtobufUnittest.NestedOptionType.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.NestedOptionType) throws -> ProtobufUnittest.NestedOptionType.Builder {
      return try ProtobufUnittest.NestedOptionType.Builder().mergeFrom(prototype)
    }
    override internal func getDescription(indent:String) throws -> String {
      var output:String = ""
      output += unknownFields.getDescription(indent)
      return output
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.NestedOptionType"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.NestedOptionType"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.NestedOptionType.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.NestedOptionType = ProtobufUnittest.NestedOptionType()
      internal func getMessage() -> ProtobufUnittest.NestedOptionType {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.NestedOptionType.Builder {
        builderResult = ProtobufUnittest.NestedOptionType()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.NestedOptionType.Builder {
        return try ProtobufUnittest.NestedOptionType.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.NestedOptionType {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.NestedOptionType {
        let returnMe:ProtobufUnittest.NestedOptionType = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.NestedOptionType) throws -> ProtobufUnittest.NestedOptionType.Builder {
        if other == ProtobufUnittest.NestedOptionType() {
         return self
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.NestedOptionType.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.NestedOptionType.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

}

// @@protoc_insertion_point(global_scope)
